{"version":3,"sources":["webpack:///fenix-ui-chart-creator.min.js","webpack:///webpack/bootstrap 271849b2cd279241a807","webpack:///./src/js/index.js","webpack:///external \"jquery\"","webpack:///external \"underscore\"","webpack:///external \"loglevel\"","webpack:///./src/config/errors.js","webpack:///./src/config/events.js","webpack:///./src/config/config.js","webpack:///external \"fenix-ui-pivotator\"","webpack:///external \"fenix-ui-pivotator-utils\"","webpack:///./src/js ^.*\\.js$","webpack:///./src/js/renderers/highcharts.js","webpack:///./src/config/renderers/highcharts_shared.js","webpack:///external \"highcharts\"","webpack:///external \"highcharts-more\"","webpack:///external \"highcharts-treemap\"","webpack:///external \"highcharts-no-data-to-display\"","webpack:///external \"highcharts-exporting\"","webpack:///external \"amplify-pubsub\"","webpack:///./src/config/renderers/highcharts.js","webpack:///./src/js/renderers/jvenn.js","webpack:///./src/config/renderers/jvenn.js","webpack:///external \"jvenn\""],"names":["define","__WEBPACK_EXTERNAL_MODULE_2__","__WEBPACK_EXTERNAL_MODULE_3__","__WEBPACK_EXTERNAL_MODULE_4__","__WEBPACK_EXTERNAL_MODULE_8__","__WEBPACK_EXTERNAL_MODULE_9__","__WEBPACK_EXTERNAL_MODULE_13__","__WEBPACK_EXTERNAL_MODULE_14__","__WEBPACK_EXTERNAL_MODULE_15__","__WEBPACK_EXTERNAL_MODULE_16__","__WEBPACK_EXTERNAL_MODULE_17__","__WEBPACK_EXTERNAL_MODULE_18__","__WEBPACK_EXTERNAL_MODULE_22__","modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","$","_","log","ERR","EVT","C","Pivotator","fenixtool","Chart","o","info","extend","this","initial","_parseInput","valid","_validateInput","_initVariables","_bindEventListeners","_renderChart","error","selectorPath","prototype","update","config","_parseInputUpdate","pivotatorConfig","fenixTool","parseInput","model","metadata","dsd","chart","pivotator","pivot","on","channel","fn","context","_context","channels","push","callback","redraw","isFunction","warn","_trigger","args","Array","slice","arguments","i","l","length","subscription","apply","param","format","useDimensionLabelsIfExist","$el","el","type","pc","inputFormat","aggregationFn","aggregations","hidden","columns","x","values","y","rows","series","formatter","valueOutputType","showRowHeaders","decimals","showCode","showFlag","showUnit","renderer","lang","createConfiguration","errors","window","fx_chart_id","String","code","MISSING_CONTAINER","_getPluginPath","name","path","registeredSelectors","pluginRegistry","conf","Renderer","_getRenderer","myPivotatorConfig","_getEventName","evt","concat","_unbindEventListeners","dispose","_callSelectorInstanceMethod","method","opts1","opts2","Instance","undefined","prefix","INVALID_DATA","READY_TIMEOUT","highcharts","jvenn","webpackContext","req","webpackContextResolve","map","Error","./index.js","./renderers/highcharts.js","./renderers/jvenn.js","keys","Object","resolve","templates","templateStyle","Highcharts","HC","_renderHighcharts","reflow","chartConfig","alert","highchartsConfig","defaultRenderOptions","_populateData","er","console","toLowerCase","count","xAxis","categories","join","cols2","yAxis","data","j","parseFloat","tempData","nameM","Male","jStat","col","alter","nameF","Female","ddata","min","quartiles","max","innerSize","Math","floor","innerBegin","myData","size","dataLabels","point","color","distance","sum","drilldown","drilldata","drillD","ii","cols","hasOwnProperty","title","dataArray","k","dataObj","layoutAlgorithm","allowDrillToNode","animationLimit","turboThreshold","enabled","levelIsConstant","levels","level","borderWidth","text","cols2label","jj","parent","value","model2","toTree","split","z","country","tooltip","useHTML","headerFormat","pointFormat","footerFormat","followPointer","obj","countRow","orderRow","toFixed","sort","a","b","v","incrementalAngle","PI","currentAngle","Z","I","parseInt","X","cos","Y","sin","events","alignTicks","backgroundColor","spacing","plotBorderColor","plotBorderWidth","style","fontFamily","fontSize","fontWeight","zoomType","resetZoomButton","position","align","theme","fill","stroke","width","textAlign","states","hover","colors","credits","exporting","navigation","buttonOptions","stroke-width","r","select","legend","floating","padding","verticalAlign","symbolPadding","itemStyle","cursor","itemHiddenStyle","itemHoverStyle","activeColor","inactiveColor","arrowSize","animation","subtitle","gridLineWidth","lineColor","tickColor","gridLineColor","tickLength","labels","lineWidth","plotLines","shadow","crosshairs","shared","noData","line","crosshair","plotOptions","column","pointPadding","column_stacked","stacking","area","pyramid","reversed","step","opposite","linkedTo","abs","category","numberFormat","area_stacked","pie","donut","allowPointSelect","showInLegend","scatter","heatmap","marginTop","marginBottom","colorAxis","minColor","layout","margin","symbolHeight","treemap","boxplot","bubble","dashStyle","label","rotation","fontStyle","zIndex","startOnTick","endOnTick","maxPadding","bubblecircle","JVenn","_renderJVenn","processedArry","displayMode","displayStat"],"mappings":"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","file":"fenix-ui-chart-creator.min.js","sourcesContent":["define([\"jquery\",\"underscore\",\"loglevel\",\"fenix-ui-pivotator\",\"fenix-ui-pivotator-utils\",\"highcharts\",\"highcharts-more\",\"highcharts-treemap\",\"highcharts-no-data-to-display\",\"highcharts-exporting\",\"amplify-pubsub\",\"jvenn\"], function(__WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_3__, __WEBPACK_EXTERNAL_MODULE_4__, __WEBPACK_EXTERNAL_MODULE_8__, __WEBPACK_EXTERNAL_MODULE_9__, __WEBPACK_EXTERNAL_MODULE_13__, __WEBPACK_EXTERNAL_MODULE_14__, __WEBPACK_EXTERNAL_MODULE_15__, __WEBPACK_EXTERNAL_MODULE_16__, __WEBPACK_EXTERNAL_MODULE_17__, __WEBPACK_EXTERNAL_MODULE_18__, __WEBPACK_EXTERNAL_MODULE_22__) { return /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(1);\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*global require, define*/\n\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n\t    __webpack_require__(2),\n\t    __webpack_require__(3),\n\t    __webpack_require__(4),\n\t    __webpack_require__(5),\n\t    __webpack_require__(6),\n\t    __webpack_require__(7),\n\t    __webpack_require__(8),\n\t    __webpack_require__(9)\n\t], __WEBPACK_AMD_DEFINE_RESULT__ = function ($, _, log, ERR, EVT, C, Pivotator, fenixtool) {\n\t\n\t    'use strict';\n\t\n\t    var selectorPath = \"./renderers/\";\n\t\n\t    function Chart(o) {\n\t\n\t        log.info(\"FENIX Chart\");\n\t        log.info(o);\n\t        $.extend(true, this, C, {initial: o});\n\t        this._parseInput(o);\n\t        var valid = this._validateInput();\n\t        if (valid === true) {\n\t            this._initVariables();\n\t            this._bindEventListeners();\n\t            this._renderChart();\n\t            return this;\n\t        } else {\n\t            log.error(\"Impossible to create Chart\");\n\t            log.error(valid);\n\t        }\n\t    }\n\t\n\t    // API\n\t    /**\n\t     * Update chart\n\t     * @return {Object} Chart instance\n\t     */\n\t    Chart.prototype.update = function (config) {\n\t\n\t        this._parseInputUpdate(config);\n\t\n\t        var pivotatorConfig = this.fenixTool.parseInput(this.initial.model.metadata.dsd, this.pivotatorConfig);\n\t\n\t        this.chart.model = this.pivotator.pivot(this.initial.model, pivotatorConfig);\n\t\n\t        this.chart.update(config);\n\t    };\n\t\n\t    /**\n\t     * pub/sub\n\t     * @return {Object} component instance\n\t     */\n\t    Chart.prototype.on = function (channel, fn, context) {\n\t        var _context = context || this;\n\t        if (!this.channels[channel]) {\n\t            this.channels[channel] = [];\n\t        }\n\t        this.channels[channel].push({context: _context, callback: fn});\n\t        return this;\n\t    };\n\t\n\t    /**\n\t     * Force redrawing\n\t     * @return {Object} filter instance\n\t     */\n\t    Chart.prototype.redraw = function () {\n\t\n\t        if (this.chart && $.isFunction(this.chart.redraw)) {\n\t            this.chart.redraw();\n\t        } else {\n\t            log.warn(\"Abort redraw\");\n\t        }\n\t\n\t    };\n\t\n\t    Chart.prototype._trigger = function (channel) {\n\t        if (!this.channels[channel]) {\n\t            return false;\n\t        }\n\t        var args = Array.prototype.slice.call(arguments, 1);\n\t        for (var i = 0, l = this.channels[channel].length; i < l; i++) {\n\t            var subscription = this.channels[channel][i];\n\t            subscription.callback.apply(subscription.context, args);\n\t        }\n\t        return this;\n\t    };\n\t\n\t    // end API\n\t\n\t    Chart.prototype._parseInput = function () {\n\t\n\t        this._parseInputUpdate(this.initial);\n\t    };\n\t\n\t    Chart.prototype._parseInputUpdate = function (param) {\n\t\n\t        var format = param.useDimensionLabelsIfExist === true ? \"fenixtool\" : \"raw\";\n\t\n\t        this.$el = $(param.el);\n\t        this.type = param.type;\n\t        this.model = param.model;\n\t        var pc = {};\n\t        pc.inputFormat = format;\n\t        pc.aggregationFn = param.aggregationFn;\n\t        pc.aggregations = param.aggregations || [];\n\t        pc.hidden = param.hidden || [];\n\t        pc.columns = param.x;\n\t        pc.values = param.y || [\"value\"];\n\t        pc.rows = param.series;\n\t        pc.formatter = param.formatter || \"value\";\n\t        pc.valueOutputType = param.valueOutputType;\n\t        pc.showRowHeaders = param.showRowHeaders || false;\n\t        pc.decimals = param.decimals || 2;\n\t        pc.showCode = param.showCode || false;\n\t        pc.showFlag = param.showFlag || false;\n\t        pc.showUnit = param.showUnit || false;\n\t        // add more pivotator config\n\t        this.pivotatorConfig = pc;\n\t        this.renderer = param.renderer || C.renderer;\n\t        this.lang = param.lang || 'EN';\n\t        this.config = param.config;\n\t        if (typeof param.createConfiguration === 'function') {\n\t            this.createConfiguration = param.createConfiguration;\n\t        }\n\t    };\n\t\n\t    Chart.prototype._validateInput = function () {\n\t        var valid = true, errors = [];\n\t        //set Chart id\n\t        if (!this.id) {\n\t            window.fx_chart_id = window.fx_chart_id >= 0 ? window.fx_chart_id++ : 0;\n\t            this.id = String(window.fx_chart_id);\n\t            log.warn(\"Impossible to find Chart id. Set auto id to: \" + this.id);\n\t        }\n\t        if (!this.$el) {\n\t            errors.push({code: ERR.MISSING_CONTAINER});\n\t            log.warn(\"Impossible to find Chart container\");\n\t        }\n\t        //Check if $el exist\n\t        if (this.$el.length === 0) {\n\t            errors.push({code: ERR.MISSING_CONTAINER});\n\t            log.warn(\"Impossible to find box container\");\n\t        }\n\t        //add validation\n\t        return errors.length > 0 ? errors : valid;\n\t\n\t    };\n\t\n\t    Chart.prototype._initVariables = function () {\n\t        //pub/sub\n\t        this.channels = {};\n\t        this.pivotator = new Pivotator();\n\t        this.fenixTool = new fenixtool();\n\t    };\n\t\n\t    Chart.prototype._bindEventListeners = function () {\n\t\n\t        //amplify.subscribe(this._getEventName(EVT.SELECTOR_READY), this, this._onSelectorReady);\n\t\n\t    };\n\t\n\t    // Preload scripts\n\t\n\t    Chart.prototype._getPluginPath = function (name) {\n\t\n\t        var registeredSelectors = $.extend(true, {}, this.pluginRegistry),\n\t            path;\n\t\n\t        var conf = registeredSelectors[name];\n\t\n\t        if (!conf) {\n\t            log.error('Registration not found for \"' + name + ' plugin\".');\n\t        }\n\t\n\t        if (conf.path) {\n\t            path = conf.path;\n\t        } else {\n\t            log.error('Impossible to find path configuration for \"' + name + ' plugin\".');\n\t        }\n\t\n\t        return selectorPath + path;\n\t\n\t    };\n\t\n\t    Chart.prototype._renderChart = function () {\n\t\n\t        var Renderer = this._getRenderer(this.renderer);\n\t        var myPivotatorConfig = this.fenixTool.parseInput(this.model.metadata.dsd, this.pivotatorConfig);\n\t\n\t        var model = this.pivotator.pivot(this.model, myPivotatorConfig);\n\t\n\t        var config = $.extend(true, {}, {\n\t            pivotatorConfig: this.pivotatorConfig,\n\t            el: this.$el,\n\t            model: model,\n\t            lang: this.lang,\n\t            type: this.type,\n\t            config: this.config,\n\t            createConfiguration: this.createConfiguration\n\t        });\n\t\n\t        this.chart = new Renderer(config);\n\t        this._trigger(\"ready\");\n\t    };\n\t\n\t    Chart.prototype._getEventName = function (evt) {\n\t        return this.id.concat(evt);\n\t    };\n\t\n\t    Chart.prototype._getRenderer = function (name) {\n\t        return __webpack_require__(10)(this._getPluginPath(name) + \".js\");\n\t    };\n\t\n\t    //disposition\n\t\n\t    Chart.prototype._unbindEventListeners = function () {\n\t        //amplify.unsubscribe(this._getEventName(EVT.SELECTOR_READY), this._onSelectorReady);\n\t    };\n\t\n\t    Chart.prototype.dispose = function () {\n\t        this.chart.dispose();\n\t        //unbind event listeners\n\t        this._unbindEventListeners();\n\t    };\n\t\n\t    Chart.prototype._callSelectorInstanceMethod = function (name, method, opts1, opts2) {\n\t        var Instance = this.chart;\n\t        if ($.isFunction(Instance[method])) {\n\t            return Instance[method](opts1, opts2);\n\t        }\n\t        else {\n\t            log.error(name + \" selector does not implement the mandatory \" + method + \"() fn\");\n\t        }\n\t    };\n\t    return Chart;\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_3__;\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_4__;\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;if (false) {\n\t    var define = require('amdefine')(module);\n\t}\n\t\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function ( ) {\n\t\n\t    'use strict';\n\t\n\t    var prefix = \"\";\n\t\n\t    return {\n\t\n\t        MISSING_CONTAINER : prefix + \"missing_container\",\n\t        INVALID_DATA : prefix + \"invalid_data\",\n\t        READY_TIMEOUT: prefix + \"ready_timeout\"\n\t\n\t    };\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;if (false) {\n\t    var define = require('amdefine')(module);\n\t}\n\t\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function () {\n\t\n\t    'use strict';\n\t\n\t    var prefix = \"fx.chart.\";\n\t\n\t    return {\n\t\n\t        //SELECTORS_READY: prefix + \"selectors.ready\",\n\t\n\t\n\t    };\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;if (false) {\n\t    var define = require('amdefine')(module);\n\t}\n\t\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function () {\n\t\n\t    'use strict';\n\t\n\t    return {\n\t\n\t        renderer: \"highcharts\",\n\t\n\t        pluginRegistry: {\n\t            'highcharts': {\n\t                path: 'highcharts'\n\t            },\n\t            'jvenn': {\n\t                path: 'jvenn'\n\t            }\n\t        }\n\t    }\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ },\n/* 8 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_8__;\n\n/***/ },\n/* 9 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_9__;\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar map = {\n\t\t\"./index.js\": 1,\n\t\t\"./renderers/highcharts.js\": 11,\n\t\t\"./renderers/jvenn.js\": 20\n\t};\n\tfunction webpackContext(req) {\n\t\treturn __webpack_require__(webpackContextResolve(req));\n\t};\n\tfunction webpackContextResolve(req) {\n\t\treturn map[req] || (function() { throw new Error(\"Cannot find module '\" + req + \"'.\") }());\n\t};\n\twebpackContext.keys = function webpackContextKeys() {\n\t\treturn Object.keys(map);\n\t};\n\twebpackContext.resolve = webpackContextResolve;\n\tmodule.exports = webpackContext;\n\twebpackContext.id = 10;\n\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;if (false) {\n\t    var define = require('amdefine')(module);\n\t}\n\t\n\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n\t    __webpack_require__(2),\n\t    __webpack_require__(3),\n\t    __webpack_require__(4),\n\t    __webpack_require__(5),\n\t    __webpack_require__(6),\n\t    __webpack_require__(7),\n\t    __webpack_require__(8),\n\t    __webpack_require__(19),\n\t    __webpack_require__(12),\n\t    __webpack_require__(13),\n\t    __webpack_require__(14),\n\t    __webpack_require__(15),\n\t    __webpack_require__(16),\n\t    __webpack_require__(17),\n\t    __webpack_require__(18)\n\t], __WEBPACK_AMD_DEFINE_RESULT__ = function ($, _, log, ERR, EVT, C, Pivotator, templates, templateStyle, Highcharts) {\n\t\n\t    'use strict';\n\t\n\t    function HC(o) {\n\t        log.info(\"FENIX Highcharts\");\n\t        log.info(o);\n\t\n\t        $.extend(true, this, C, o);\n\t\n\t        var valid = this._validateInput();\n\t\n\t        if (valid === true) {\n\t\n\t            this._initVariables();\n\t\n\t            this._bindEventListeners();\n\t\n\t            this._renderHighcharts(this.pivotatorConfig);\n\t\n\t            return this;\n\t\n\t        } else {\n\t            log.error(\"Impossible to create Highcharts\");\n\t            log.error(valid)\n\t        }\n\t    }\n\t\n\t    // API\n\t\n\t    /**\n\t     * pub/sub\n\t     * @return {Object} component instance\n\t     */\n\t    HC.prototype.on = function (channel, fn, context) {\n\t        var _context = context || this;\n\t        if (!this.channels[channel]) {\n\t            this.channels[channel] = [];\n\t        }\n\t        this.channels[channel].push({context: _context, callback: fn});\n\t        return this;\n\t    };\n\t\n\t    /**\n\t     * Force redrawing\n\t     * @return {Object} filter instance\n\t     */\n\t    HC.prototype.redraw = function () {\n\t\n\t        if (this.chart.length > 0) {\n\t            this.chart.highcharts().reflow();\n\t        } else {\n\t            log.warn(\"Abort redraw\");\n\t        }\n\t\n\t    };\n\t\n\t    HC.prototype.update = function (config) {\n\t\n\t        //TODO add validation\n\t        this.type = config.type ? config.type : this.type;\n\t\n\t        this._renderHighcharts(config);\n\t    };\n\t\n\t    HC.prototype._renderHighcharts = function (config) {\n\t        var model = this.model;\n\t\n\t        var chartConfig = templates[this.type];\n\t\n\t        if (!config) {\n\t            alert(\"Impossible to find chart configuration: \" + this.type);\n\t        }\n\t\n\t        var defaultRenderOptions = $.extend(true, {}, templateStyle, chartConfig);\n\t\n\t        var highchartsConfig;\n\t\n\t        if (typeof this.createConfiguration === 'function') {\n\t            highchartsConfig = this.createConfiguration(model, defaultRenderOptions);\n\t        } else {\n\t            highchartsConfig = this._populateData(this.type, model, defaultRenderOptions);\n\t        }\n\t\n\t        var highchartsConfig = $.extend(true, highchartsConfig, this.config);\n\t\n\t        try {\n\t            this.chart = Highcharts.chart(this.el[0], highchartsConfig);\n\t        }\n\t        catch (er) {\n\t            console.log(\"error\", er, config)\n\t        }\n\t        this._trigger(\"ready\");\n\t\n\t    };\n\t\n\t    HC.prototype._populateData = function (type, model, config) {\n\t\n\t        switch (type.toLowerCase()) {\n\t            //add type process\n\t            case \"heatmap\":\n\t                var count = 0;\n\t                //console.log(\"model\",model)\n\t                for (var i in model.rows) {\n\t                    config.xAxis.categories.push(model.rows[i].join(\" \"))\n\t                }\n\t\n\t                for (var i in model.cols2) {\n\t                    config.yAxis.categories.push(model.cols2[i].join(\" \"))\n\t                }\n\t                for (var i in model.data) {\n\t                    for (var j in model.data[i]) {\n\t\n\t                        //if(count<150 /*&& model.data[i][j]*/)\n\t                        {\n\t                            count++;\n\t                            config.series[0].data.push([parseFloat(i), parseFloat(j), model.data[i][j]]);\n\t                        }\n\t                    }\n\t                }\n\t                /*\n\t                 config.series[0].data.push([0,0,2]);\n\t                 config.series[0].data.push(\t\t[0,1,3]\t);\n\t\n\t                 config.series[0].data.push([1,0,5]);\n\t                 config.series[0].data.push(\t\t[1,1,4]\t);\n\t                 console.log('et alrs la');\n\t                 */\n\t                break;\n\t\n\t            case \"scatter\":\n\t                for (var j in model.cols2) {\n\t                    if (j > 0) {\n\t                        var data = [];\n\t                        for (var i in model.data) {\n\t                            data.push([model.data[i][j - 1], model.data[i][j]])\n\t                        }\n\t                        config.series.push({name: model.cols2[j - 1] + \" X \" + model.cols2[j], data: data})\n\t                    }\n\t                }\n\t                break;\n\t            case \"pyramid\":\n\t                var tempData = [];\n\t\n\t                var nameM = \"\";\n\t                if (model.cols2.length > 2) {\n\t                    nameM = model.cols2[0].join(\"_\");\n\t                }\n\t                var Male = {\n\t                    name: nameM, data: jStat(model.data).col(0).alter(function (x) {\n\t                        //console.log('x',x);\n\t                        return x * -1;\n\t                    })\n\t                };\n\t                var nameF = \"\";\n\t                if (model.cols2.length > 2) {\n\t                    nameF = model.cols2[1].join(\"_\")\n\t                }\n\t                var Female = {\n\t                    name: nameF,\n\t                    data: jStat(model.data).col(1) || []\n\t                };\n\t                for (var i in model.rows) {\n\t                    //if (i >20) {break;}\n\t                    config.xAxis[0].categories.push(model.rows[i].join(\"_\"));\n\t\n\t                    config.xAxis[1].categories.push(model.rows[i].join(\"_\"));\n\t                    // config.xAxis.categories.push(\"test\"+i);\n\t\n\t                    /*    var ddata = [model.data[i][0],model.data[i][1]]\n\t                     //console.log(\"JSTAT\",ddata)\n\t                     tempData.push(ddata);\n\t                     */\n\t                }\n\t                config.series.push(Male);\n\t                config.series.push(Female);\n\t\n\t                break;\n\t            case \"boxplot\":\n\t\n\t                var tempData = [];\n\t                for (var i in model.rows) {\n\t                    //if (i >20) {break;}\n\t                    config.xAxis.categories.push(model.rows[i].join(\"_\"));\n\t                    // config.xAxis.categories.push(\"test\"+i);\n\t\n\t                    var ddata = [jStat(model.data[i]).min() + 0].concat(jStat(model.data[i]).quartiles().concat(jStat(model.data[i]).max()))\n\t                    tempData.push(ddata);\n\t\n\t                }\n\t\n\t                config.series.push({data: tempData});\n\t\n\t                break;\n\t            case \"donut\":\n\t                var tempData = [];\n\t                //console.log(model)\n\t                var innerSize = Math.floor(100 / model.cols2.length);\n\t                var innerBegin = 0;\n\t                //console.log(\"innerSize\",innerSize)\n\t                for (var i in model.cols2) {\n\t\n\t                    var myData = [];\n\t                    for (var j in model.rows) {\n\t                        if (model.data[j][i] > 0)\n\t                            myData.push({name: model.rows[j].join(\"-\"), y: model.data[j][i]})\n\t                    }\n\t\n\t                    config.series.push({\n\t                        name: model.cols2[i].join(\"-\"),\n\t                        data: myData,\n\t                        size: (innerBegin + innerSize) + '%',\n\t                        innerSize: innerBegin + '%',\n\t                        dataLabels: {\n\t                            formatter: function () {\n\t                                return this.y > 5 ? this.point.name : null;\n\t                            },\n\t                            color: '#ffffff',\n\t                            distance: -30\n\t                        }\n\t                    })\n\t                    innerBegin += innerSize;\n\t\n\t                    //console.log(\"JSTAT\",ddata)\n\t\n\t                    //\tconfig.series.push({data: tempData,name:model.rows[i].join(\"_\")});\n\t                    //\tconfig.series[0].data.push({y: ddata,name:model.rows[i].join(\"<br>\")});\n\t\n\t\n\t                }\n\t                //console.log(\"config\",config)\n\t                break;\n\t            case \"pie\":\n\t                var tempData = [];\n\t                for (var i in model.rows) {\n\t                    //if (i > 20) {break;}\n\t                    //config.xAxis.categories.push(model.rows[i].join(\"_\"));\n\t                    // config.xAxis.categories.push(\"test\"+i);\n\t\n\t                    var ddata = jStat(model.data[i]).sum();\n\t//\t\t\t\tvar ddata = model.data[i][0];\n\t\n\t                    //console.log(\"JSTAT\",ddata)\n\t                    tempData.push(ddata);\n\t                    //\tconfig.series.push({data: tempData,name:model.rows[i].join(\"_\")});\n\t                    //if(ddata>0)\n\t                    config.series[0].data.push({\n\t                        y: ddata,\n\t                        name: model.rows[i].join(\"<br>\"),\n\t                        drilldown: model.rows[i].join(\"_\")\n\t                    });\n\t                    var drilldata = [];\n\t\n\t                    for (var j in model.cols2) {\n\t                        if (model.data[i][j] > 0)\n\t                            drilldata.push([model.cols2[j].join(\" \"), model.data[i][j]]);\n\t\n\t                    }\n\t                    var drillD = {\n\t                        name: model.rows[i].join(\"<br>\"),\n\t                        id: model.rows[i].join(\"_\"),\n\t                        data: drilldata\n\t                    };\n\t                    config.drilldown.series.push(drillD)\n\t                }\n\t                //console.log(\"config\",config)\n\t                break;\n\t            case \"pieold\":\n\t                config.chart.type = 'pie'; // temp fix to enable pieold to work\n\t                for (var ii in model.cols) {\n\t                    if (model.cols.hasOwnProperty(ii)) {\n\t                        i = model.cols[ii];\n\t\n\t                        config.xAxis.categories.push(i.title[this.lang]);\n\t\n\t                    }\n\t                }\n\t\n\t                var dataArray = [];\n\t\n\t                for (var k in model.rows) {\n\t                    for (var j in config.xAxis.categories) {\n\t\n\t                        var dataObj = {};\n\t                        dataObj.y = model.data[k][j];\n\t                        dataObj.name = config.xAxis.categories[j];\n\t                        dataArray.push(dataObj);\n\t                    }\n\t\n\t                    config.series.push({name: model.rows[k].join(\" \"), data: dataArray});\n\t                }\n\t\n\t                break;\n\t\n\t            case \"treemapold\":\n\t                config = {\n\t                    series: [{\n\t                        type: 'treemap',\n\t                        layoutAlgorithm: 'squarified',\n\t                        allowDrillToNode: true,\n\t                        animationLimit: 1000, turboThreshold: 0,\n\t                        dataLabels: {\n\t                            enabled: false\n\t                        },\n\t                        levelIsConstant: false,\n\t                        levels: [{\n\t                            level: 1,\n\t                            dataLabels: {\n\t                                enabled: true\n\t                            },\n\t                            borderWidth: 3\n\t                        }],\n\t                        data: []\n\t                    }],\n\t                    title: {\n\t                        text: ''\n\t                    }\n\t                };\n\t                for (var i in model.rows) {\n\t                    //if(i<500 )\n\t                    {\n\t                        var ii = model.rows[i];\n\t                        config.series[0].data.push({\n\t                            name: ii.join(\" \"),\n\t                            id: \"id_\" + i/*,value:jStat(model.data[i]).sum()*/\n\t                        })\n\t\n\t                        for (var j in model.cols2label) {\n\t                            var jj = model.cols2label[j];\n\t                            if (model.data[i][j] && model.data[i][j] >= 0)\n\t                                config.series[0].data.push({\n\t                                    name: jj.join(\" \"),\n\t                                    id: \"id_\" + i + \"_\" + j,\n\t                                    parent: \"id_\" + i,\n\t                                    value: model.data[i][j]\n\t                                })\n\t                        }\n\t\n\t\n\t                    }\n\t                }\n\t                //console.log(config.series);\n\t\n\t                break;\n\t\n\t            case \"treemap\":\n\t                //console.log(\"Model\",model);\n\t\n\t                var model2 = {rows: this.pivotator.toTree(model.rows, 1), cols: this.pivotator.toTree(model.cols2, 1)};\n\t                //console.log(\"mod2\",model2)\n\t                config = {\n\t                    series: [{\n\t                        type: 'treemap',\n\t                        layoutAlgorithm: 'squarified',\n\t                        allowDrillToNode: true,\n\t                        animationLimit: 1000, turboThreshold: 0,\n\t                        dataLabels: {enabled: false},\n\t                        levelIsConstant: false,\n\t                        levels: [{level: 1, dataLabels: {enabled: true}, borderWidth: 3}],\n\t                        data: []\n\t                    }]\n\t                };\n\t\n\t                for (var j in model2.rows) {\n\t                    for (var i in model2.rows[j]) {\n\t                        //console.log(model2.rows[j][i])\n\t                        var ii = model2.rows[j][i];\n\t                        config.series[0].data.push({\n\t                            name: ii.id,\n\t                            id: ii.id,\n\t                            parent: ii.id.split(\"_\").slice(0, ii.id.split(\"_\").length - 1).join(\"_\")/*,value:jStat(model.data[i]).sum()*/\n\t                        })\n\t                    }\n\t                }\n\t\n\t\n\t                for (var i in model.rows) {\n\t                    //if(i<10 )\n\t                    {\n\t                        var ii = model.rows[i];\n\t                        //config.series[0].data.push({name:ii.join(\" \"),id:\"id_\"+i/*,value:jStat(model.data[i]).sum()*/})\n\t\n\t                        for (var j in model.cols2label) {\n\t                            var jj = model.cols2label[j];\n\t                            if (model.data[i][j] && model.data[i][j] >= 0)\n\t                                config.series[0].data.push({\n\t                                    name: jj.join(\" \"),\n\t                                    id: \"id_\" + i + \"_\" + j,\n\t                                    parent: ii.join(\"_\"),\n\t                                    value: model.data[i][j]\n\t                                })\n\t                        }\n\t\n\t\n\t                    }\n\t                }\n\t                //console.log(config.series);\n\t\n\t                break;\n\t\n\t            case \"bubble\":\n\t\n\t                for (var i in model.rows) {\n\t                    if (model.data[i][0] && model.data[i][1] && model.data[i][2])\n\t                        config.series[0].data.push(\n\t                            {\n\t                                x: model.data[i][0],\n\t                                y: model.data[i][1],\n\t                                z: model.data[i][2],\n\t                                name: model.rows[i].join(\" \"),\n\t                                country: ''\n\t                            }\n\t                        )\n\t                }\n\t\n\t                config.tooltip = {\n\t                    useHTML: true,\n\t                    headerFormat: '<table>',\n\t                    pointFormat: '<tr><th colspan=\"2\"><h3>{point.name}</h3></th></tr>' +\n\t                    '<tr><th>' + model.cols2[0] + ':</th><td>{point.x}</td></tr>' +\n\t                    '<tr><th>' + model.cols2[1] + ':</th><td>{point.y}</td></tr>' +\n\t                    '<tr><th>' + model.cols2[2] + ':</th><td>{point.z}</td></tr>',\n\t                    footerFormat: '</table>',\n\t                    followPointer: true\n\t                };\n\t                //console.log(\"config\",config)\n\t                /*\n\t                 config.series=[{\n\t                 data: [\n\t                 { x: 95, y: 95, z: 13.8, name: 'BE', country: 'Belgium' },\n\t                 { x: 86.5, y: 102.9, z: 14.7, name: 'DE', country: 'Germany' },\n\t                 { x: 80.8, y: 91.5, z: 15.8, name: 'FI', country: 'Finland' },\n\t                 { x: 80.4, y: 102.5, z: 12, name: 'NL', country: 'Netherlands' },\n\t                 { x: 80.3, y: 86.1, z: 11.8, name: 'SE', country: 'Sweden' },\n\t                 { x: 78.4, y: 70.1, z: 16.6, name: 'ES', country: 'Spain' },\n\t                 { x: 74.2, y: 68.5, z: 14.5, name: 'FR', country: 'France' },\n\t                 { x: 73.5, y: 83.1, z: 10, name: 'NO', country: 'Norway' },\n\t                 { x: 71, y: 93.2, z: 24.7, name: 'UK', country: 'United Kingdom' },\n\t                 { x: 69.2, y: 57.6, z: 10.4, name: 'IT', country: 'Italy' },\n\t                 { x: 68.6, y: 20, z: 16, name: 'RU', country: 'Russia' },\n\t                 { x: 65.5, y: 126.4, z: 35.3, name: 'US', country: 'United States' },\n\t                 { x: 65.4, y: 50.8, z: 28.5, name: 'HU', country: 'Hungary' },\n\t                 { x: 63.4, y: 51.8, z: 15.4, name: 'PT', country: 'Portugal' },\n\t                 { x: 64, y: 82.9, z: 31.3, name: 'NZ', country: 'New Zealand' }\n\t                 ]\n\t                 }]*/\n\t                break;\n\t\n\t            case \"bubblecircle\":\n\t\n\t\n\t                var obj = {};\n\t                var countRow=0;\n\t                \n\t                var orderRow=[];\n\t                for(var i in model.data) {\n\t                    orderRow.push( (model.data[i][0]?model.data[i][0].toFixed(10):-1) +\"_\"+i);\n\t                }\n\t\n\t                console.log(\"orderRow\",orderRow);\n\t\n\t                orderRow.sort(function(a,b) {\n\t                    return a.split('_')[0] - b.split('_')[0];\n\t                });\n\t//console.log(\"orderRow\",orderRow)\n\t\n\t                for(var i in orderRow)\n\t                {\n\t                    var v=orderRow[i].split(\"_\");\n\t\n\t                    if(parseFloat(v[0])!==null && parseFloat(v[0])>=0)\n\t                        countRow++;\n\t                }\n\t\n\t                var incrementalAngle = 2*Math.PI/countRow;\n\t\n\t                var currentAngle=0;\n\t                for (var i in orderRow)\n\t                {\n\t                    var v=orderRow[i].split(\"_\");\n\t                    var Z = parseFloat(v[0]);\n\t                    var I=parseInt(v[1]);\n\t                    if(Z!==null && Z>=0) {\n\t\n\t                        var X=Math.cos(currentAngle);\n\t                        var Y=Math.sin(currentAngle);\n\t                        obj = {\n\t                            x: X,\n\t                            y: Y,\n\t                            z: Z,                            \n\t                            name: model.rows[I].join(\" \" ),\n\t                            country: model.rows[I].join(\" \" )\n\t                        };\n\t\n\t                        currentAngle+=incrementalAngle;\n\t                        \n\t                        config.series[0].data.push(obj);\n\t                    }\n\t                }\n\t                //console.log('model row: ', obj);\n\t\n\t                config.tooltip = {\n\t                    useHTML: true,\n\t                    headerFormat: '<table>',\n\t                    pointFormat: '<tr><th colspan=\"2\">{point.country}</th></tr>' +\n\t                    '<tr><th>' + model.cols2[0] + ':</th><td>{point.z}</td></tr>',\n\t                    footerFormat: '</table>',\n\t                    followPointer: true\n\t                };\n\t\n\t            break;\n\t        default:\n\t\n\t            for (var ii in model.cols) {\n\t\n\t                if (model.cols.hasOwnProperty(ii)) {\n\t                    i = model.cols[ii];\n\t                    config.xAxis.categories.push(i.title[this.lang]);\n\t                }\n\t            }\n\t\n\t            for (var i in model.rows) {\n\t\n\t                //\t console.log(\"1 \",config.series)\n\t                config.series.push({name: model.rows[i].join(\" \"), data: model.data[i]});\n\t                //\t console.log(\"2 \",config.series)\n\t\n\t            }\n\t    }\n\t    //\tconsole.log(\"config\",config)\n\t    return config;\n\t};\n\t\n\t\n\t    HC.prototype._trigger = function (channel) {\n\t\n\t        if (!this.channels[channel]) {\n\t            return false;\n\t        }\n\t        var args = Array.prototype.slice.call(arguments, 1);\n\t        for (var i = 0, l = this.channels[channel].length; i < l; i++) {\n\t            var subscription = this.channels[channel][i];\n\t            subscription.callback.apply(subscription.context, args);\n\t        }\n\t\n\t        return this;\n\t    };\n\t\n\t    // end API\n\t\n\t    HC.prototype._validateInput = function () {\n\t\n\t        var valid = true,\n\t            errors = [];\n\t\n\t        return errors.length > 0 ? errors : valid;\n\t\n\t    };\n\t\n\t    HC.prototype._initVariables = function () {\n\t\n\t        //pub/sub\n\t        this.channels = {};\n\t\n\t        this.pivotator = new Pivotator();\n\t\n\t    };\n\t\n\t    HC.prototype._bindEventListeners = function () {\n\t\n\t        //amplify.subscribe(this._getEventName(EVT.SELECTOR_READY), this, this._onSelectorReady);\n\t\n\t    };\n\t\n\t    HC.prototype._getEventName = function (evt) {\n\t\n\t        return this.id.concat(evt);\n\t    };\n\t\n\t    //disposition\n\t    HC.prototype._unbindEventListeners = function () {\n\t\n\t        //amplify.unsubscribe(this._getEventName(EVT.SELECTOR_READY), this._onSelectorReady);\n\t\n\t    };\n\t\n\t    HC.prototype.dispose = function () {\n\t\n\t        //this.chart.dispose(); change in highchart destroy\n\t\n\t        //unbind event listeners\n\t        this._unbindEventListeners();\n\t\n\t    };\n\t\n\t    // utils\n\t\n\t    return HC;\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;if (false) {\n\t    var define = require('amdefine')(module);\n\t}\n\t\n\t\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function () {\n\t\n\t    'use strict';\n\t\n\t    return {\n\t\n\t        //Line chart\n\t        chart: {\n\t            events: {},\n\t\n\t            type: 'line', //Tipo di grafico:  area, areaspline, boxplot, bubble, column, line, pie, scatter, spline\n\t\n\t            alignTicks: false,\n\t            backgroundColor: '#FFFFFF', //Colore di background\n\t            //borderColor: '#3fa8da', //Colore bordo intorno\n\t            //borderWidth: 1, //Spessore bordo intorno\n\t            //borderRadius: 0, //Smusso bordo intorno\n\t            //margin: [5,5,5,5], //Margine intorno (vince sullo spacing)\n\t            spacing: [20, 1, 1, 1],//Spacing intorno (molto simile al margin - Di default il bottom è 15, qui l'ho messo a 10 per essere uguale agli altri)\n\t            //plotBackgroundColor: 'red', //Colore di background solo area chart\n\t            plotBorderColor: '#ffffff', //Colore bordo intorno solo area chart\n\t            plotBorderWidth: 0, //Spessore bordo intorno solo area chart\n\t            //showAxes: false, //Mostra gli assi quando le serie sono aggiunte dinamicamente\n\t            style: {\n\t                fontFamily: 'Roboto', // Font di tutto\n\t                fontSize: '12px', // La dimensione qui vale solo per i titoli\n\t                fontWeight: 300 // Con Roboto è molto bello giocare con i pesi\n\t            },\n\t            zoomType: 'xy', //Attiva lo zoom e stabilisce in quale dimensione\n\t            //selectionMarkerFill: 'rgba(0,0,0,0.25)',//Colore di fonfo della selezione per lo zoom (trasparente per far vedere sotto)\n\t\n\t\n\t            resetZoomButton: {\n\t                position: {\n\t                    align: 'right', //Allineamento zoom orizzontale\n\t                    //verticalAlign:'middle' //Allineamento zoom verticale\n\t                    x: -10 //Posizione del pulsante rispetto all'allineamento (valori positivi > destra) e al PLOT\n\t\n\t                },\n\t                theme: {\n\t                    fill: '#FFFFFF', //Colore di background pulsante reset zoom\n\t                    stroke: '#666666', //Colore di stroke pulsante reset zoom\n\t                    width: 60, //Larghezza del pulsante reset\n\t                    //r:0, //Smusso pulsante reset zoom\n\t                    style: {\n\t                        textAlign: 'center', //CSS style aggiunto da me per centrare il testo\n\t                        fontSize: 10\n\t                    },\n\t                    states: {\n\t                        hover: {\n\t                            fill: '#e6e6e6', //Colore di background hover pulsante reset zoom\n\t                            stroke: '#666666', //Colore di stroke hover pulsante reset zoom\n\t                            style: {\n\t                                //color: 'white' //Colore testo hover pulsante reset zoom\n\t                            }\n\t                        }\n\t                    }\n\t                }\n\t\n\t            }\n\t        },\n\t        colors: [ //Colori delle charts\n\t            '#56adc3',\n\t            '#5691c3',\n\t            '#5663c3',\n\t            '#d2ccbf',\n\t            '#DF3328',\n\t            '#F1E300',\n\t            '#F7AE3C',\n\t            '#DF3328',\n\t            '#2e8bcc',\n\t            '#339933',\n\t            '#e51400',\n\t            '#ffc40d',\n\t            '#f39c12',\n\t            '#e671b8',\n\t            '#7b4f9d',\n\t            '#8cbf26',\n\t            '#ff0097',\n\t            '#00aba9',\n\t            '#1abc9c',\n\t            '#16a085',\n\t            '#2ecc71',\n\t            '#27ae60',\n\t            '#3498db',\n\t            '#2980b9',\n\t            '#9b59b6',\n\t            '#8e44ad',\n\t            '#34495e',\n\t            '#2c3e50',\n\t            '#f1c40f',\n\t            '#e67e22',\n\t            '#d35400',\n\t            '#e74c3c',\n\t            '#c0392b'\n\t        ],\n\t        credits: {\n\t            enabled: false //Attiva o disattiva il link di HighCharts dalla chart\n\t        },\n\t        exporting: {\n\t            enabled: true\n\t        },\n\t        navigation: { //Modifica lo stile dei bottoni e spesso del solo bottone dell'esportazione (lo sfondo)\n\t            buttonOptions: {\n\t                theme: {\n\t                    'stroke-width': 1, // Peso stroke del bottone\n\t                    stroke: '#666666', // Colore stroke del bottone\n\t                    r: 0, // Smusso stroke del bottone,\n\t                    states: {\n\t                        hover: {\n\t                            stroke: '#666666', // Press stroke del bottone\n\t                            fill: '#e6e6e6' // Rollover del bottone\n\t                        },\n\t                        select: {\n\t                            stroke: '#666666', // Press stroke del bottone\n\t                            fill: '#e6e6e6' // Press Fill del bottone\n\t                        }\n\t                    }\n\t                }\n\t            }\n\t        },\n\t        legend: { //Modifica style della legenda\n\t            enabled: true, //Attiva la legenda\n\t            floating: false, // IMPORTANTE - Permette alla plot area di stare sotto alla legenda - si guadagna molto spazio\n\t\n\t            //margin: 100, //Margine dell'intero blocco legenda dall'area di PLOT (Solo quando non è floating)\n\t            padding: 50, //Padding del box legenda (Ingrandisce il box)\n\t            backgroundColor: '#FFFFFF', //Colore di sfondo della legenda\n\t            //layout: 'horizontal', //Tipologia di legenda\n\t            align: 'left', //Allineamento orizzontale del box della legenda (left, center, right)\n\t            verticalAlign: 'bottom', //allineamento verticale della legenda (top, middle, bottom)\n\t            //width: 200, //Larghezza della legenda (Aggiunge Margini e padding)\n\t            x: 15,//Offset della posizione della legenda rispetto all'allineamento (valori positivi > destra)\n\t            //y: -8,//Offset della posizione della legenda rispetto all'allineamento (valori positivi > verso il basso)\n\t            //maxHeight: 90, //IMPORTANTE - Indica l'altezza massima della legenda, se superata, mostra la paginazione (vedi sotto)\n\t            //borderColor: '#666666', //Colore del bordo della legenda\n\t            borderWidth: 0, //Spessore bordo della legenda\n\t            //borderRadius: 3, //Smusso della legenda\n\t            //itemDistance: 10, //Distanza X degli elementi quando la legenda è in verticale\n\t            //symbolWidth: 20, //Larghezza del simbolo rettangolo quando la legenda ne ha uno (accanto al nome - default 16)\n\t            //symbolHeight: 20, //Altezza del simbolo rettangolo quando la legenda ne ha uno (accanto al nome - default 12)\n\t            //symbolRadius: 3, //Smusso del simbolo rettangolo quando la legenda ne ha uno (default 2)\n\t            symbolPadding: 10, //Distanza tra simbolo e legenda (default 5)\n\t            //itemMarginBottom: 5, //Margine inferiore di ogni elemento della legenda\n\t            //itemMarginTop: 5, //Margine superiore di ogni elemento della legenda\n\t            //lineHeight: 20, //Altezza di ogni elemento della legenda (il valore di default è 16)\n\t            itemStyle: {\n\t                cursor: 'pointer',\n\t                color: '#666666',\n\t                fontSize: '14px',\n\t                fontWeight: 300,\n\t            },\n\t            itemHiddenStyle: { //Colore dell'elemento legenda quando è disattivato\n\t                color: '#eeeeee'\n\t            },\n\t            itemHoverStyle: { //Colore dell'elemento legenda in rollover\n\t                color: '#3ca7da'\n\t            },\n\t            navigation: { //Paginazione Legenda - stilizzazione\n\t                activeColor: '#3ca7da', //Colore freccia attiva legenda\n\t                inactiveColor: '#666666', //Colore freccia disattiva legenda\n\t                arrowSize: 8, //Dimensioni freccia\n\t                animation: true, //Attiva/Disattiva animazione\n\t                style: { //Stile CSS applicato solo alla navigazione della legenda\n\t                    color: '#666666',\n\t                    fontSize: '10px'\n\t                }\n\t            }\n\t        },\n\t        /*        plotOptions: {\n\t         series: {\n\t         allowPointSelect: true, //Permette di selezionare i punti della chart\n\t         //pointPlacement: \"on\", Per partire dall'origine\n\t         animation: { // Configura l'animazione di entrata\n\t         duration: 1000,\n\t         easing: 'swing'\n\t         },\n\t         connectNulls: true,\n\t         cropThreshold: 3,\n\t         lineWidth: 1, // IMPORTANTE - Cambia lo spessore delle linee della chart\n\t         states: {\n\t         hover: {\n\t         lineWidth: 1\n\t         }\n\t         },\n\t         fillColor: {\n\t         },\n\t         marker: {\n\t         enabled: false, //Attiva o disattiva i marker\n\t         //symbol: 'url(http://www.mentaltoy.com/resources/logoChart.png)', //Questo paramentro carica un simbolo personalizzato. Si può anche avere una chart con marker diverse sulle linee\n\t         symbol: 'circle', // Tipologia di marker\n\t         radius: 4,\n\t         lineWidth: 1,\n\t         states: {\n\t         hover: {\n\t         enabled: true, // Attiva o disattiva il marker quando si passa sopra la chart\n\t         symbol: 'circle',\n\t         radius: 5,\n\t         lineWidth: 2\n\t         }\n\t         }\n\t         }\n\t         }\n\t         },*/\n\t        title: {\n\t            //enabled: false,\n\t            text: '',\n\t            x: -20 //center\n\t        },\n\t        subtitle: {\n\t            text: null,\n\t            x: -20\n\t        },\n\t        xAxis: {\n\t            gridLineWidth: 1, // IMPORTANTE - Attiva le linee verticali\n\t            lineColor: '#e0e0e0',\n\t            tickColor: '#e0e0e0',\n\t            gridLineColor: '#eeeeee',\n\t            tickLength: 7,\n\t            //tickmarkPlacement: 'on', Per partire dall'origine\n\t            labels: {\n\t                y: 25,\n\t                style: {\n\t                    color: '#666666',\n\t                    fontWeight: '300',\n\t                    fontSize: 12\n\t                }\n\t            },\n\t            //type: 'datetime',\n\t            /*            dateTimeLabelFormats: { // don't display the dummy year\n\t             //month: '%e. %b',\n\t             year: '%Y'\n\t             },*/\n\t            categories: [],\n\t            title: {\n\t                enabled: false,\n\t                text: 'null'\n\t            }\n\t        },\n\t        yAxis: {\n\t            gridLineWidth: 1, // IMPORTANTE - Attiva le linee verticali\n\t            lineWidth: 1,\n\t            //tickWidth: 1,\n\t            lineColor: '#e0e0e0',\n\t            gridLineColor: '#eeeeee',\n\t            labels: {\n\t                style: {\n\t                    color: '#666666',\n\t                    fontWeight: '300',\n\t                    fontSize: 12\n\t                }\n\t            },\n\t            title: {\n\t                enabled: false,\n\t                text: 'null'\n\t            },\n\t            plotLines: [\n\t                {\n\t                    value: 0,\n\t                    width: 1\n\t                }\n\t            ]\n\t        },\n\t        tooltip: {\n\t            //valueSuffix: '',\n\t            // backgroundColor: 'rgba(255, 255, 255, 0.95)',\n\t            borderWidth: 1,\n\t            shadow: true,\n\t            crosshairs: \"mixed\",\n\t            shared: false\n\t        },\n\t        series: [],\n\t        noData: {\n\t            style: {\n\t                fontWeight: 'bold',\n\t                fontSize: '15px',\n\t                color: '#303030'\n\t            }\n\t        }\n\t    }\n\t\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ },\n/* 13 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_13__;\n\n/***/ },\n/* 14 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_14__;\n\n/***/ },\n/* 15 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_15__;\n\n/***/ },\n/* 16 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_16__;\n\n/***/ },\n/* 17 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_17__;\n\n/***/ },\n/* 18 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_18__;\n\n/***/ },\n/* 19 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;if (false) {\n\t    var define = require('amdefine')(module);\n\t}\n\t\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function () {\n\t\n\t    'use strict';\n\t\n\t    return {\n\t\n\t        line: {\n\t            chart: {type: 'line'},\n\t            title: {text: ''},\n\t            subtitle: {text: ''},\n\t            xAxis: {crosshair: true},\n\t            //yAxis: {min: 0, title: {text: ''}},\n\t            tooltip: {\n\t                headerFormat: '<span style=\"font-size:10px\">{point.key}</span><table>',\n\t                pointFormat: '<tr><td style=\"color:{series.color};padding:0\">{series.name}: </td>' +\n\t                '<td style=\"padding:0\"><b>{point.y:.1f} </b></td></tr>',\n\t                footerFormat: '</table>',\n\t                useHTML: true\n\t            },\n\t            plotOptions: {column: {pointPadding: 0.2, borderWidth: 0}},\n\t            series: []\n\t        },\n\t        column: {\n\t            chart: {type: 'column'},\n\t            title: {text: ''},\n\t            subtitle: {text: ''},\n\t            xAxis: {categories: [], crosshair: true},\n\t           // yAxis: {min: 0, title: {text: ''}},\n\t            tooltip: {\n\t                headerFormat: '<span style=\"font-size:10px\">{point.key}</span><table>',\n\t                pointFormat: '<tr><td style=\"color:{series.color};padding:0\">{series.name}: </td>' +\n\t                '<td style=\"padding:0\"><b>{point.y:.1f} </b></td></tr>',\n\t                footerFormat: '</table>',\n\t                useHTML: true\n\t            },\n\t            plotOptions: {column: {pointPadding: 0.2, borderWidth: 0}},\n\t            series: []\n\t        },\n\t        column_stacked: {\n\t            chart: {type: 'column'},\n\t            title: {text: ''},\n\t            subtitle: {text: ''},\n\t            xAxis: {categories: [], crosshair: true},\n\t           // yAxis: {min: 0, title: {text: ''}},\n\t            tooltip: {\n\t                headerFormat: '<span style=\"font-size:10px\">{point.key}</span><table>',\n\t                pointFormat: '<tr><td style=\"color:{series.color};padding:0\">{series.name}: </td>' +\n\t                '<td style=\"padding:0\"><b>{point.y:.1f} </b></td></tr>',\n\t                footerFormat: '</table>',\n\t                useHTML: true\n\t            },\n\t            plotOptions: {column: {stacking: 'normal',pointPadding: 0.2, borderWidth: 0}},\n\t            series: []\n\t        },\n\t\n\t        area: {\n\t            chart: {type: 'area'},\n\t            title: {text: ''},\n\t            subtitle: {text: ''},\n\t            xAxis: {categories: [], crosshair: true},\n\t          //  yAxis: {min: 0, title: {text: ''}},\n\t            tooltip: {\n\t                headerFormat: '<span style=\"font-size:10px\">{point.key}</span><table>',\n\t                pointFormat: '<tr><td style=\"color:{series.color};padding:0\">{series.name}: </td>' +\n\t                '<td style=\"padding:0\"><b>{point.y:.1f} </b></td></tr>',\n\t                footerFormat: '</table>',\n\t                useHTML: true\n\t            },\n\t            plotOptions: {column: {pointPadding: 0.2, borderWidth: 0}},\n\t            series: []\n\t        },\n\t\t\tpyramid: \n\t      {\n\t            chart: {\n\t                type: 'bar'\n\t            },\n\t            title: {\n\t                text: ''\n\t            },\n\t            subtitle: {\n\t                text: ''\n\t            },\n\t            xAxis: [{\n\t               categories:[],\n\t                reversed: false,\n\t                labels: {\n\t                    step: 1\n\t                }\n\t            }, { // mirror axis on right side\n\t\n\t               categories:[],              \n\t\t\t\t  opposite: true,\n\t                reversed: false,\n\t              \n\t                linkedTo: 0,\n\t                labels: {\n\t                    step: 1\n\t                }\n\t            }],\n\t            yAxis: {\n\t                title: {\n\t                    text: null\n\t                },\n\t                labels: {\n\t                    formatter: function () {\n\t                        return Math.abs(this.value) ;\n\t                    }\n\t                }\n\t            },\n\t\n\t            plotOptions: {\n\t                series: {\n\t                    stacking: 'normal'\n\t                }\n\t            },\n\t\n\t            tooltip: {\n\t                formatter: function () {\n\t                    return '<b>' + this.series.name + ', age ' + this.point.category + '</b><br/>' +\n\t                        'Population: ' + Highcharts.numberFormat(Math.abs(this.point.y), 0);\n\t                }\n\t            },\n\t\n\t         \t\"series\":[],\n\t        \n\t        },\n\t        area_stacked: {\n\t            chart: {type: 'area'},\n\t            title: {text: ''},\n\t            subtitle: {text: ''},\n\t            xAxis: {categories: [], crosshair: true},\n\t            //yAxis: {min: 0, title: {text: ''}},\n\t            tooltip: {\n\t                headerFormat: '<span style=\"font-size:10px\">{point.key}</span><table>',\n\t                pointFormat: '<tr><td style=\"color:{series.color};padding:0\">{series.name}: </td>' +\n\t                '<td style=\"padding:0\"><b>{point.y:.1f} </b></td></tr>',\n\t                footerFormat: '</table>',\n\t                useHTML: true\n\t            },\n\t            plotOptions: {area: {stacking: 'normal'}},\n\t            series: []\n\t        },\n\t        pie: {\n\t            chart: {type: 'pie'},\n\t            title: {text: ''},\n\t            subtitle: {text: ''},\n\t            xAxis: {categories: [], crosshair: true},   plotOptions: {\n\t            series: {\n\t                dataLabels: {\n\t                    enabled: true,\n\t                    format: '{point.name}: {point.y:.1f}'\n\t                }\n\t            }\n\t        },\n\t           //yAxis: {min: 0, title: {text: ''}},\n\t            tooltip: {\n\t                headerFormat: '<span style=\"font-size:10px\">{point.key}</span><table>',\n\t                pointFormat: '<tr><td style=\"color:{series.color};padding:0\">{series.name}: </td>' +\n\t                '<td style=\"padding:0\"><b>{point.y:.1f} </b></td></tr>',\n\t                footerFormat: '</table>',\n\t                useHTML: true\n\t            },\n\t           // plotOptions: {area: {stacking: 'normal'}},\n\t            series: [{data:[]\t}]\n\t\t\t\t,drilldown:{series:[]}\n\t        }, \n\t\t\tdonut: {\n\t            chart: {type: 'pie'},\n\t            title: {text: ''},\n\t            subtitle: {text: ''},\n\t            xAxis: {categories: [], crosshair: true}, plotOptions: {\n\t                pie: {\n\t                    allowPointSelect: true,\n\t                    cursor: 'pointer',\n\t                    dataLabels: {\n\t                        enabled: false\n\t                    },\n\t                    showInLegend: true\n\t                }\n\t            },\n\t           //yAxis: {min: 0, title: {text: ''}},\n\t            tooltip: {\n\t                headerFormat: '<span style=\"font-size:10px\">{point.key}</span><table>',\n\t                pointFormat: '<tr><td style=\"color:{series.color};padding:0\">{series.name}: </td>' +\n\t                '<td style=\"padding:0\"><b>{point.y:.1f} </b></td></tr>',\n\t                footerFormat: '</table>',\n\t                useHTML: true\n\t            },\n\t           // plotOptions: {area: {stacking: 'normal'}},\n\t            series: []\n\t        },\n\t        scatter: {\n\t        chart: {\n\t            type: 'scatter',\n\t            zoomType: 'xy'\n\t        },\n\t       /* title: {\n\t            text: 'Height Versus Weight of 507 Individuals by Gender'\n\t        },\n\t        subtitle: {\n\t            text: 'Source: Heinz  2003'\n\t        },\n\t        xAxis: {\n\t            title: {\n\t                enabled: true,\n\t                text: 'Height (cm)'\n\t            },\n\t            startOnTick: true,\n\t            endOnTick: true,\n\t            showLastLabel: true\n\t        },\n\t        yAxis: {\n\t            title: {\n\t                text: 'Weight (kg)'\n\t            }\n\t        },\n\t        legend: {\n\t            layout: 'vertical',\n\t            align: 'left',\n\t            verticalAlign: 'top',\n\t            x: 100,\n\t            y: 70,\n\t            floating: true,\n\t            backgroundColor:  '#FFFFFF',\n\t            borderWidth: 1\n\t        },\n\t        plotOptions: {\n\t            scatter: {\n\t                marker: {\n\t                    radius: 5,\n\t                    states: {\n\t                        hover: {\n\t                            enabled: true,\n\t                            lineColor: 'rgb(100,100,100)'\n\t                        }\n\t                    }\n\t                },\n\t                states: {\n\t                    hover: {\n\t                        marker: {\n\t                            enabled: false\n\t                        }\n\t                    }\n\t                },\n\t                tooltip: {\n\t                    headerFormat: '<b>{series.name}</b><br>',\n\t                    pointFormat: '{point.x} cm, {point.y} kg'\n\t                }\n\t            }\n\t        },*/\n\t        series: []\n\t    },\n\t       \n\t        heatmap: {\n\t\n\t            chart: {\n\t                type: 'heatmap',\n\t                marginTop: 40,\n\t                marginBottom: 80,\n\t                plotBorderWidth: 1\n\t            },\n\t\n\t\n\t            title: {\n\t                text: ''\n\t            },\n\t\n\t            xAxis: {\n\t                categories: [/*'Alexander', 'Marie', 'Maximilian', 'Sophia', 'Lukas', 'Maria', 'Leon', 'Anna', 'Tim', 'Laura'*/]\n\t            },\n\t\n\t            yAxis: {\n\t                categories: [/*'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday'*/],\n\t                title: null\n\t            },\n\t\n\t            colorAxis: {\n\t                min: 0,\n\t                minColor: '#FFFFFF',\n\t              //  maxColor: Highcharts.getOptions().colors[0]\n\t            },\n\t\n\t            legend: {\n\t                align: 'right',\n\t                layout: 'vertical',\n\t                margin: 0,\n\t                verticalAlign: 'top',\n\t                y: 25,\n\t                symbolHeight: 280\n\t            },\n\t\n\t            tooltip: {\n\t                formatter: function () {\n\t                    return '<b>' + this.series.xAxis.categories[this.point.x] + '</b>  <br><b>' + this.series.yAxis.categories[this.point.y] + '</b><br> Value : <b>' +this.point.value + '</b>';\n\t                }\n\t            },\n\t\n\t            series: [{\n\t                name: '',\n\t                borderWidth: 1,\n\t                data: [/*[0, 0, 10], [0, 1, 19], [0, 2, 8], [0, 3, 24], [0, 4, 67], [1, 0, 92], [1, 1, 58], [1, 2, 78], [1, 3, 117], [1, 4, 48], [2, 0, 35], [2, 1, 15], [2, 2, 123], [2, 3, 64], [2, 4, 52], [3, 0, 72], [3, 1, 132], [3, 2, 114], [3, 3, 19], [3, 4, 16], [4, 0, 38], [4, 1, 5], [4, 2, 8], [4, 3, 117], [4, 4, 115], [5, 0, 88], [5, 1, 32], [5, 2, 12], [5, 3, 6], [5, 4, 120], [6, 0, 13], [6, 1, 44], [6, 2, 88], [6, 3, 98], [6, 4, 96], [7, 0, 31], [7, 1, 1], [7, 2, 82], [7, 3, 32], [7, 4, 30], [8, 0, 85], [8, 1, 97], [8, 2, 123], [8, 3, 64], [8, 4, 84], [9, 0, 47], [9, 1, 114], [9, 2, 31], [9, 3, 48], [9, 4, 91]*/],\n\t                dataLabels: {\n\t                    enabled: true,\n\t                    color: '#000000'\n\t                }\n\t            }]\n\t\n\t        },\n\t        treemap: {\n\t       \n\t          series: []\n\t    },\n\t        boxplot: {\n\t\n\t        chart: {\n\t            type: 'boxplot'\n\t        },\n\t\n\t        title: {\n\t            text: ''\n\t        },\n\t\n\t        legend: {\n\t            enabled: false\n\t        },\n\t\n\t        xAxis: {\n\t            categories: [/*'1', '2', '3', '4', '5'*/],\n\t            title: {\n\t                text: ''\n\t            }\n\t        },\n\t\n\t        yAxis: {\n\t            title: {\n\t                text: ''\n\t            }\n\t        },\n\t\n\t        series: []\n\t\n\t    },\n\tbubble:{\n\t\n\t        chart: {\n\t            type: 'bubble',\n\t            plotBorderWidth: 1,\n\t            zoomType: 'xy'\n\t        },\n\t\n\t        legend: {\n\t            enabled: false\n\t        },\n\t\n\t        title: {\n\t            text: 'Sugar and fat intake per country'\n\t        },\n\t\n\t        subtitle: {\n\t            text: 'Source: <a href=\"http://www.euromonitor.com/\">Euromonitor</a> and <a href=\"https://data.oecd.org/\">OECD</a>'\n\t        },\n\t\n\t        xAxis: {\n\t            gridLineWidth: 1,\n\t            title: {\n\t                text: ''\n\t            },\n\t            labels: {\n\t                format: '{value} '\n\t            },\n\t            plotLines: [{\n\t                color: 'black',\n\t                dashStyle: 'dot',\n\t                width: 2,\n\t                value: 65,\n\t                label: {\n\t                    rotation: 0,\n\t                    y: 15,\n\t                    style: {\n\t                        fontStyle: 'italic'\n\t                    },\n\t                    text: ''\n\t                },\n\t                zIndex: 3\n\t            }]\n\t        },\n\t\n\t        yAxis: {\n\t            startOnTick: false,\n\t            endOnTick: false,\n\t            title: {\n\t                text: ''\n\t            },\n\t            labels: {\n\t                format: '{value}'\n\t            },\n\t            maxPadding: 0.2,\n\t            plotLines: [{\n\t                color: 'black',\n\t                dashStyle: 'dot',\n\t                width: 2,\n\t                value: 50,\n\t                label: {\n\t                    align: 'right',\n\t                    style: {fontStyle: 'italic'},\n\t                    text: '',\n\t                    x: -10\n\t                },\n\t                zIndex: 3\n\t            }]\n\t        },\n\t\n\t      \n\t\n\t        plotOptions: {\n\t            series: {\n\t                dataLabels: {\n\t                    enabled: true,\n\t                    format: '{point.name}'\n\t                }\n\t            }\n\t        },\n\t\n\t        series: [{data:[]}]\n\t\n\t    },\n\tbubblecircle:{\n\t\n\t        chart: {\n\t            type: 'bubble',\n\t            plotBorderWidth: 1,\n\t            zoomType: 'xy'\n\t        },\n\t\n\t        legend: {\n\t            enabled: false\n\t        },\n\t\n\t        title: {\n\t            text: ''\n\t        },\n\t\n\t        subtitle: {\n\t            text: ''\n\t        },\n\t\n\t        xAxis: {\n\t            gridLineWidth: 1,\n\t            title: {\n\t                text: ''\n\t            },\n\t            labels: {\n\t                format: '{value} '\n\t            },\n\t            plotLines: [{\n\t                color: 'black',\n\t                dashStyle: 'dot',\n\t                width: 2,\n\t                value: 65,\n\t                label: {\n\t                    rotation: 0,\n\t                    y: 15,\n\t                    style: {\n\t                        fontStyle: 'italic'\n\t                    },\n\t                    text: ''\n\t                },\n\t                zIndex: 3\n\t            }]\n\t        },\n\t\n\t        yAxis: {\n\t            startOnTick: false,\n\t            endOnTick: false,\n\t            title: {\n\t                text: ''\n\t            },\n\t            labels: {\n\t                format: '{value}'\n\t            },\n\t            maxPadding: 0.2,\n\t            plotLines: [{\n\t                color: 'black',\n\t                dashStyle: 'dot',\n\t                width: 2,\n\t                value: 50,\n\t                label: {\n\t                    align: 'right',\n\t                    style: {fontStyle: 'italic'},\n\t                    text: '',\n\t                    x: -10\n\t                },\n\t                zIndex: 3\n\t            }]\n\t        },\n\t\n\t      \n\t\n\t        plotOptions: {\n\t            series: {\n\t                dataLabels: {\n\t                    enabled: false,\n\t                    format: '{point.name}'\n\t                }\n\t            }\n\t        },\n\t\n\t        series: [{data:[]}]\n\t\n\t    }\n\t    };\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ },\n/* 20 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;if (false) {\n\t    var define = require('amdefine')(module);\n\t}\n\t\n\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n\t    __webpack_require__(2),\n\t    __webpack_require__(3),\n\t    __webpack_require__(4),\n\t    __webpack_require__(5),\n\t    __webpack_require__(6),\n\t    __webpack_require__(7),\n\t    __webpack_require__(8),\n\t    __webpack_require__(21),\n\t    __webpack_require__(22),\n\t    __webpack_require__(18)\n\t], __WEBPACK_AMD_DEFINE_RESULT__ = function ($, _, log, ERR, EVT, C, Pivotator, templates) {\n\t\n\t    'use strict';\n\t\n\t    function JVenn(o) {\n\t        log.info(\"FENIX JVenn\");\n\t        log.info(o);\n\t\n\t        $.extend(true, this, C, o);\n\t\n\t        var valid = this._validateInput();\n\t\n\t        if (valid === true) {\n\t\n\t            this._initVariables();\n\t\n\t            this._bindEventListeners();\n\t\n\t            this._renderJVenn(this.pivotatorConfig);\n\t\n\t            return this;\n\t\n\t        } else {\n\t            log.error(\"Impossible to create JVenn\");\n\t            log.error(valid)\n\t        }\n\t    }\n\t\n\t    // API\n\t\n\t    /**\n\t     * pub/sub\n\t     * @return {Object} component instance\n\t     */\n\t    JVenn.prototype.on = function (channel, fn, context) {\n\t        var _context = context || this;\n\t        if (!this.channels[channel]) {\n\t            this.channels[channel] = [];\n\t        }\n\t        this.channels[channel].push({context: _context, callback: fn});\n\t        return this;\n\t    };\n\t\n\t    /**\n\t     * Force redrawing\n\t     * @return {Object} filter instance\n\t     */\n\t    JVenn.prototype.redraw = function () {\n\t\n\t        if (this.chart.length > 0){\n\t           // this.chart.highcharts().reflow();\n\t        } else {\n\t            log.warn(\"Abort redraw\");\n\t        }\n\t\n\t    };\n\t\n\t    JVenn.prototype.update = function (config) {\n\t\n\t        //TODO add validation\n\t        this.type = config.type ? config.type : this.type;\n\t        this._renderJVenn(config);\n\t\n\t    };\n\t\n\t    JVenn.prototype._renderJVenn = function (config) {\n\t        var model = this.model;\n\t\n\t        if (!config) {\n\t            alert(\"Impossible to find chart configuration: \" + this.type);\n\t        }\n\t\n\t        var config = $.extend(true, this._populateData(model, templates), config);\n\t        this.chart = this.el.jvenn(config);\n\t\n\t        this._trigger(\"ready\");\n\t\n\t    };\n\t\n\t    JVenn.prototype._populateData = function (model, config) {\n\t\n\t        for (var ii in model.cols) {\n\t            if (model.cols.hasOwnProperty(ii)) {\n\t                var i = model.cols[ii];\n\t\n\t\n\t               // console.log(i.title[this.lang]);\n\t                config.xAxis.categories.push(i.title[this.lang]);\n\t\n\t            }\n\t        }\n\t\n\t        var dataArray = [];\n\t\n\t        for (var k in model.rows) {\n\t                var data = model.data[k];\n\t\n\t                var processedArry = [];\n\t                for(var x in data){\n\t                     if(data[x] != null) {\n\t                         processedArry.push(data[x]);\n\t                     }\n\t                 }\n\t\n\t            config.series.push({\n\t                name: model.rows[k].join(\" \"),\n\t                data: processedArry\n\t            });\n\t        }\n\t\n\t        return config;\n\t    };\n\t\n\t\n\t    JVenn.prototype._trigger = function (channel) {\n\t\n\t        if (!this.channels[channel]) {\n\t            return false;\n\t        }\n\t        var args = Array.prototype.slice.call(arguments, 1);\n\t        for (var i = 0, l = this.channels[channel].length; i < l; i++) {\n\t            var subscription = this.channels[channel][i];\n\t            subscription.callback.apply(subscription.context, args);\n\t        }\n\t\n\t        return this;\n\t    };\n\t\n\t    // end API\n\t\n\t    JVenn.prototype._validateInput = function () {\n\t\n\t        var valid = true,\n\t            errors = [];\n\t\n\t        return errors.length > 0 ? errors : valid;\n\t\n\t    };\n\t\n\t    JVenn.prototype._initVariables = function () {\n\t\n\t        //pub/sub\n\t        this.channels = {};\n\t\n\t        this.pivotator = new Pivotator();\n\t\n\t    };\n\t\n\t    JVenn.prototype._bindEventListeners = function () {\n\t\n\t        //amplify.subscribe(this._getEventName(EVT.SELECTOR_READY), this, this._onSelectorReady);\n\t\n\t    };\n\t\n\t    JVenn.prototype._getEventName = function (evt) {\n\t\n\t        return this.id.concat(evt);\n\t    };\n\t\n\t    //disposition\n\t    JVenn.prototype._unbindEventListeners = function () {\n\t\n\t        //amplify.unsubscribe(this._getEventName(EVT.SELECTOR_READY), this._onSelectorReady);\n\t\n\t    };\n\t\n\t    JVenn.prototype.dispose = function () {\n\t\n\t        //this.chart.dispose(); change in highchart destroy\n\t\n\t        //unbind event listeners\n\t        this._unbindEventListeners();\n\t\n\t    };\n\t\n\t    // utils\n\t\n\t    return JVenn;\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ },\n/* 21 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;if (false) {\n\t    var define = require('amdefine')(module);\n\t}\n\t\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function () {\n\t\n\t    'use strict';\n\t\n\t    return {\n\t       displayMode: 'classic',  //default = 'classic' or 'edwards'\n\t       displayStat: 'true', // default = true\n\t       xAxis: {\n\t           categories: []\n\t       },\n\t       series: [],\n\t       exporting: true\n\t    };\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ },\n/* 22 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_22__;\n\n/***/ }\n/******/ ])});;\n\n\n/** WEBPACK FOOTER **\n ** fenix-ui-chart-creator.min.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 271849b2cd279241a807\n **/","/*global require, define*/\ndefine([\n    'jquery',\n    'underscore',\n    'loglevel',\n    '../config/errors',\n    '../config/events',\n    '../config/config',\n    'fenix-ui-pivotator',\n    'fenix-ui-pivotator-utils'\n], function ($, _, log, ERR, EVT, C, Pivotator, fenixtool) {\n\n    'use strict';\n\n    var selectorPath = \"./renderers/\";\n\n    function Chart(o) {\n\n        log.info(\"FENIX Chart\");\n        log.info(o);\n        $.extend(true, this, C, {initial: o});\n        this._parseInput(o);\n        var valid = this._validateInput();\n        if (valid === true) {\n            this._initVariables();\n            this._bindEventListeners();\n            this._renderChart();\n            return this;\n        } else {\n            log.error(\"Impossible to create Chart\");\n            log.error(valid);\n        }\n    }\n\n    // API\n    /**\n     * Update chart\n     * @return {Object} Chart instance\n     */\n    Chart.prototype.update = function (config) {\n\n        this._parseInputUpdate(config);\n\n        var pivotatorConfig = this.fenixTool.parseInput(this.initial.model.metadata.dsd, this.pivotatorConfig);\n\n        this.chart.model = this.pivotator.pivot(this.initial.model, pivotatorConfig);\n\n        this.chart.update(config);\n    };\n\n    /**\n     * pub/sub\n     * @return {Object} component instance\n     */\n    Chart.prototype.on = function (channel, fn, context) {\n        var _context = context || this;\n        if (!this.channels[channel]) {\n            this.channels[channel] = [];\n        }\n        this.channels[channel].push({context: _context, callback: fn});\n        return this;\n    };\n\n    /**\n     * Force redrawing\n     * @return {Object} filter instance\n     */\n    Chart.prototype.redraw = function () {\n\n        if (this.chart && $.isFunction(this.chart.redraw)) {\n            this.chart.redraw();\n        } else {\n            log.warn(\"Abort redraw\");\n        }\n\n    };\n\n    Chart.prototype._trigger = function (channel) {\n        if (!this.channels[channel]) {\n            return false;\n        }\n        var args = Array.prototype.slice.call(arguments, 1);\n        for (var i = 0, l = this.channels[channel].length; i < l; i++) {\n            var subscription = this.channels[channel][i];\n            subscription.callback.apply(subscription.context, args);\n        }\n        return this;\n    };\n\n    // end API\n\n    Chart.prototype._parseInput = function () {\n\n        this._parseInputUpdate(this.initial);\n    };\n\n    Chart.prototype._parseInputUpdate = function (param) {\n\n        var format = param.useDimensionLabelsIfExist === true ? \"fenixtool\" : \"raw\";\n\n        this.$el = $(param.el);\n        this.type = param.type;\n        this.model = param.model;\n        var pc = {};\n        pc.inputFormat = format;\n        pc.aggregationFn = param.aggregationFn;\n        pc.aggregations = param.aggregations || [];\n        pc.hidden = param.hidden || [];\n        pc.columns = param.x;\n        pc.values = param.y || [\"value\"];\n        pc.rows = param.series;\n        pc.formatter = param.formatter || \"value\";\n        pc.valueOutputType = param.valueOutputType;\n        pc.showRowHeaders = param.showRowHeaders || false;\n        pc.decimals = param.decimals || 2;\n        pc.showCode = param.showCode || false;\n        pc.showFlag = param.showFlag || false;\n        pc.showUnit = param.showUnit || false;\n        // add more pivotator config\n        this.pivotatorConfig = pc;\n        this.renderer = param.renderer || C.renderer;\n        this.lang = param.lang || 'EN';\n        this.config = param.config;\n        if (typeof param.createConfiguration === 'function') {\n            this.createConfiguration = param.createConfiguration;\n        }\n    };\n\n    Chart.prototype._validateInput = function () {\n        var valid = true, errors = [];\n        //set Chart id\n        if (!this.id) {\n            window.fx_chart_id = window.fx_chart_id >= 0 ? window.fx_chart_id++ : 0;\n            this.id = String(window.fx_chart_id);\n            log.warn(\"Impossible to find Chart id. Set auto id to: \" + this.id);\n        }\n        if (!this.$el) {\n            errors.push({code: ERR.MISSING_CONTAINER});\n            log.warn(\"Impossible to find Chart container\");\n        }\n        //Check if $el exist\n        if (this.$el.length === 0) {\n            errors.push({code: ERR.MISSING_CONTAINER});\n            log.warn(\"Impossible to find box container\");\n        }\n        //add validation\n        return errors.length > 0 ? errors : valid;\n\n    };\n\n    Chart.prototype._initVariables = function () {\n        //pub/sub\n        this.channels = {};\n        this.pivotator = new Pivotator();\n        this.fenixTool = new fenixtool();\n    };\n\n    Chart.prototype._bindEventListeners = function () {\n\n        //amplify.subscribe(this._getEventName(EVT.SELECTOR_READY), this, this._onSelectorReady);\n\n    };\n\n    // Preload scripts\n\n    Chart.prototype._getPluginPath = function (name) {\n\n        var registeredSelectors = $.extend(true, {}, this.pluginRegistry),\n            path;\n\n        var conf = registeredSelectors[name];\n\n        if (!conf) {\n            log.error('Registration not found for \"' + name + ' plugin\".');\n        }\n\n        if (conf.path) {\n            path = conf.path;\n        } else {\n            log.error('Impossible to find path configuration for \"' + name + ' plugin\".');\n        }\n\n        return selectorPath + path;\n\n    };\n\n    Chart.prototype._renderChart = function () {\n\n        var Renderer = this._getRenderer(this.renderer);\n        var myPivotatorConfig = this.fenixTool.parseInput(this.model.metadata.dsd, this.pivotatorConfig);\n\n        var model = this.pivotator.pivot(this.model, myPivotatorConfig);\n\n        var config = $.extend(true, {}, {\n            pivotatorConfig: this.pivotatorConfig,\n            el: this.$el,\n            model: model,\n            lang: this.lang,\n            type: this.type,\n            config: this.config,\n            createConfiguration: this.createConfiguration\n        });\n\n        this.chart = new Renderer(config);\n        this._trigger(\"ready\");\n    };\n\n    Chart.prototype._getEventName = function (evt) {\n        return this.id.concat(evt);\n    };\n\n    Chart.prototype._getRenderer = function (name) {\n        return require(this._getPluginPath(name) + \".js\");\n    };\n\n    //disposition\n\n    Chart.prototype._unbindEventListeners = function () {\n        //amplify.unsubscribe(this._getEventName(EVT.SELECTOR_READY), this._onSelectorReady);\n    };\n\n    Chart.prototype.dispose = function () {\n        this.chart.dispose();\n        //unbind event listeners\n        this._unbindEventListeners();\n    };\n\n    Chart.prototype._callSelectorInstanceMethod = function (name, method, opts1, opts2) {\n        var Instance = this.chart;\n        if ($.isFunction(Instance[method])) {\n            return Instance[method](opts1, opts2);\n        }\n        else {\n            log.error(name + \" selector does not implement the mandatory \" + method + \"() fn\");\n        }\n    };\n    return Chart;\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/js/index.js\n ** module id = 1\n ** module chunks = 0\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"jquery\"\n ** module id = 2\n ** module chunks = 0\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_3__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"underscore\"\n ** module id = 3\n ** module chunks = 0\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_4__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"loglevel\"\n ** module id = 4\n ** module chunks = 0\n **/","if (typeof define !== 'function') {\n    var define = require('amdefine')(module);\n}\n\ndefine(function ( ) {\n\n    'use strict';\n\n    var prefix = \"\";\n\n    return {\n\n        MISSING_CONTAINER : prefix + \"missing_container\",\n        INVALID_DATA : prefix + \"invalid_data\",\n        READY_TIMEOUT: prefix + \"ready_timeout\"\n\n    };\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/config/errors.js\n ** module id = 5\n ** module chunks = 0\n **/","if (typeof define !== 'function') {\n    var define = require('amdefine')(module);\n}\n\ndefine(function () {\n\n    'use strict';\n\n    var prefix = \"fx.chart.\";\n\n    return {\n\n        //SELECTORS_READY: prefix + \"selectors.ready\",\n\n\n    };\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/config/events.js\n ** module id = 6\n ** module chunks = 0\n **/","if (typeof define !== 'function') {\n    var define = require('amdefine')(module);\n}\n\ndefine(function () {\n\n    'use strict';\n\n    return {\n\n        renderer: \"highcharts\",\n\n        pluginRegistry: {\n            'highcharts': {\n                path: 'highcharts'\n            },\n            'jvenn': {\n                path: 'jvenn'\n            }\n        }\n    }\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/config/config.js\n ** module id = 7\n ** module chunks = 0\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_8__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"fenix-ui-pivotator\"\n ** module id = 8\n ** module chunks = 0\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_9__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"fenix-ui-pivotator-utils\"\n ** module id = 9\n ** module chunks = 0\n **/","var map = {\n\t\"./index.js\": 1,\n\t\"./renderers/highcharts.js\": 11,\n\t\"./renderers/jvenn.js\": 20\n};\nfunction webpackContext(req) {\n\treturn __webpack_require__(webpackContextResolve(req));\n};\nfunction webpackContextResolve(req) {\n\treturn map[req] || (function() { throw new Error(\"Cannot find module '\" + req + \"'.\") }());\n};\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 10;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/js ^.*\\.js$\n ** module id = 10\n ** module chunks = 0\n **/","if (typeof define !== 'function') {\n    var define = require('amdefine')(module);\n}\n\ndefine([\n    'jquery',\n    'underscore',\n    'loglevel',\n    '../../config/errors',\n    '../../config/events',\n    '../../config/config',\n    'fenix-ui-pivotator',\n    '../../config/renderers/highcharts',\n    '../../config/renderers/highcharts_shared',\n    'highcharts',\n    'highcharts-more',\n    'highcharts-treemap',\n    \"highcharts-no-data-to-display\",\n    \"highcharts-exporting\",\n    'amplify-pubsub'\n], function ($, _, log, ERR, EVT, C, Pivotator, templates, templateStyle, Highcharts) {\n\n    'use strict';\n\n    function HC(o) {\n        log.info(\"FENIX Highcharts\");\n        log.info(o);\n\n        $.extend(true, this, C, o);\n\n        var valid = this._validateInput();\n\n        if (valid === true) {\n\n            this._initVariables();\n\n            this._bindEventListeners();\n\n            this._renderHighcharts(this.pivotatorConfig);\n\n            return this;\n\n        } else {\n            log.error(\"Impossible to create Highcharts\");\n            log.error(valid)\n        }\n    }\n\n    // API\n\n    /**\n     * pub/sub\n     * @return {Object} component instance\n     */\n    HC.prototype.on = function (channel, fn, context) {\n        var _context = context || this;\n        if (!this.channels[channel]) {\n            this.channels[channel] = [];\n        }\n        this.channels[channel].push({context: _context, callback: fn});\n        return this;\n    };\n\n    /**\n     * Force redrawing\n     * @return {Object} filter instance\n     */\n    HC.prototype.redraw = function () {\n\n        if (this.chart.length > 0) {\n            this.chart.highcharts().reflow();\n        } else {\n            log.warn(\"Abort redraw\");\n        }\n\n    };\n\n    HC.prototype.update = function (config) {\n\n        //TODO add validation\n        this.type = config.type ? config.type : this.type;\n\n        this._renderHighcharts(config);\n    };\n\n    HC.prototype._renderHighcharts = function (config) {\n        var model = this.model;\n\n        var chartConfig = templates[this.type];\n\n        if (!config) {\n            alert(\"Impossible to find chart configuration: \" + this.type);\n        }\n\n        var defaultRenderOptions = $.extend(true, {}, templateStyle, chartConfig);\n\n        var highchartsConfig;\n\n        if (typeof this.createConfiguration === 'function') {\n            highchartsConfig = this.createConfiguration(model, defaultRenderOptions);\n        } else {\n            highchartsConfig = this._populateData(this.type, model, defaultRenderOptions);\n        }\n\n        var highchartsConfig = $.extend(true, highchartsConfig, this.config);\n\n        try {\n            this.chart = Highcharts.chart(this.el[0], highchartsConfig);\n        }\n        catch (er) {\n            console.log(\"error\", er, config)\n        }\n        this._trigger(\"ready\");\n\n    };\n\n    HC.prototype._populateData = function (type, model, config) {\n\n        switch (type.toLowerCase()) {\n            //add type process\n            case \"heatmap\":\n                var count = 0;\n                //console.log(\"model\",model)\n                for (var i in model.rows) {\n                    config.xAxis.categories.push(model.rows[i].join(\" \"))\n                }\n\n                for (var i in model.cols2) {\n                    config.yAxis.categories.push(model.cols2[i].join(\" \"))\n                }\n                for (var i in model.data) {\n                    for (var j in model.data[i]) {\n\n                        //if(count<150 /*&& model.data[i][j]*/)\n                        {\n                            count++;\n                            config.series[0].data.push([parseFloat(i), parseFloat(j), model.data[i][j]]);\n                        }\n                    }\n                }\n                /*\n                 config.series[0].data.push([0,0,2]);\n                 config.series[0].data.push(\t\t[0,1,3]\t);\n\n                 config.series[0].data.push([1,0,5]);\n                 config.series[0].data.push(\t\t[1,1,4]\t);\n                 console.log('et alrs la');\n                 */\n                break;\n\n            case \"scatter\":\n                for (var j in model.cols2) {\n                    if (j > 0) {\n                        var data = [];\n                        for (var i in model.data) {\n                            data.push([model.data[i][j - 1], model.data[i][j]])\n                        }\n                        config.series.push({name: model.cols2[j - 1] + \" X \" + model.cols2[j], data: data})\n                    }\n                }\n                break;\n            case \"pyramid\":\n                var tempData = [];\n\n                var nameM = \"\";\n                if (model.cols2.length > 2) {\n                    nameM = model.cols2[0].join(\"_\");\n                }\n                var Male = {\n                    name: nameM, data: jStat(model.data).col(0).alter(function (x) {\n                        //console.log('x',x);\n                        return x * -1;\n                    })\n                };\n                var nameF = \"\";\n                if (model.cols2.length > 2) {\n                    nameF = model.cols2[1].join(\"_\")\n                }\n                var Female = {\n                    name: nameF,\n                    data: jStat(model.data).col(1) || []\n                };\n                for (var i in model.rows) {\n                    //if (i >20) {break;}\n                    config.xAxis[0].categories.push(model.rows[i].join(\"_\"));\n\n                    config.xAxis[1].categories.push(model.rows[i].join(\"_\"));\n                    // config.xAxis.categories.push(\"test\"+i);\n\n                    /*    var ddata = [model.data[i][0],model.data[i][1]]\n                     //console.log(\"JSTAT\",ddata)\n                     tempData.push(ddata);\n                     */\n                }\n                config.series.push(Male);\n                config.series.push(Female);\n\n                break;\n            case \"boxplot\":\n\n                var tempData = [];\n                for (var i in model.rows) {\n                    //if (i >20) {break;}\n                    config.xAxis.categories.push(model.rows[i].join(\"_\"));\n                    // config.xAxis.categories.push(\"test\"+i);\n\n                    var ddata = [jStat(model.data[i]).min() + 0].concat(jStat(model.data[i]).quartiles().concat(jStat(model.data[i]).max()))\n                    tempData.push(ddata);\n\n                }\n\n                config.series.push({data: tempData});\n\n                break;\n            case \"donut\":\n                var tempData = [];\n                //console.log(model)\n                var innerSize = Math.floor(100 / model.cols2.length);\n                var innerBegin = 0;\n                //console.log(\"innerSize\",innerSize)\n                for (var i in model.cols2) {\n\n                    var myData = [];\n                    for (var j in model.rows) {\n                        if (model.data[j][i] > 0)\n                            myData.push({name: model.rows[j].join(\"-\"), y: model.data[j][i]})\n                    }\n\n                    config.series.push({\n                        name: model.cols2[i].join(\"-\"),\n                        data: myData,\n                        size: (innerBegin + innerSize) + '%',\n                        innerSize: innerBegin + '%',\n                        dataLabels: {\n                            formatter: function () {\n                                return this.y > 5 ? this.point.name : null;\n                            },\n                            color: '#ffffff',\n                            distance: -30\n                        }\n                    })\n                    innerBegin += innerSize;\n\n                    //console.log(\"JSTAT\",ddata)\n\n                    //\tconfig.series.push({data: tempData,name:model.rows[i].join(\"_\")});\n                    //\tconfig.series[0].data.push({y: ddata,name:model.rows[i].join(\"<br>\")});\n\n\n                }\n                //console.log(\"config\",config)\n                break;\n            case \"pie\":\n                var tempData = [];\n                for (var i in model.rows) {\n                    //if (i > 20) {break;}\n                    //config.xAxis.categories.push(model.rows[i].join(\"_\"));\n                    // config.xAxis.categories.push(\"test\"+i);\n\n                    var ddata = jStat(model.data[i]).sum();\n//\t\t\t\tvar ddata = model.data[i][0];\n\n                    //console.log(\"JSTAT\",ddata)\n                    tempData.push(ddata);\n                    //\tconfig.series.push({data: tempData,name:model.rows[i].join(\"_\")});\n                    //if(ddata>0)\n                    config.series[0].data.push({\n                        y: ddata,\n                        name: model.rows[i].join(\"<br>\"),\n                        drilldown: model.rows[i].join(\"_\")\n                    });\n                    var drilldata = [];\n\n                    for (var j in model.cols2) {\n                        if (model.data[i][j] > 0)\n                            drilldata.push([model.cols2[j].join(\" \"), model.data[i][j]]);\n\n                    }\n                    var drillD = {\n                        name: model.rows[i].join(\"<br>\"),\n                        id: model.rows[i].join(\"_\"),\n                        data: drilldata\n                    };\n                    config.drilldown.series.push(drillD)\n                }\n                //console.log(\"config\",config)\n                break;\n            case \"pieold\":\n                config.chart.type = 'pie'; // temp fix to enable pieold to work\n                for (var ii in model.cols) {\n                    if (model.cols.hasOwnProperty(ii)) {\n                        i = model.cols[ii];\n\n                        config.xAxis.categories.push(i.title[this.lang]);\n\n                    }\n                }\n\n                var dataArray = [];\n\n                for (var k in model.rows) {\n                    for (var j in config.xAxis.categories) {\n\n                        var dataObj = {};\n                        dataObj.y = model.data[k][j];\n                        dataObj.name = config.xAxis.categories[j];\n                        dataArray.push(dataObj);\n                    }\n\n                    config.series.push({name: model.rows[k].join(\" \"), data: dataArray});\n                }\n\n                break;\n\n            case \"treemapold\":\n                config = {\n                    series: [{\n                        type: 'treemap',\n                        layoutAlgorithm: 'squarified',\n                        allowDrillToNode: true,\n                        animationLimit: 1000, turboThreshold: 0,\n                        dataLabels: {\n                            enabled: false\n                        },\n                        levelIsConstant: false,\n                        levels: [{\n                            level: 1,\n                            dataLabels: {\n                                enabled: true\n                            },\n                            borderWidth: 3\n                        }],\n                        data: []\n                    }],\n                    title: {\n                        text: ''\n                    }\n                };\n                for (var i in model.rows) {\n                    //if(i<500 )\n                    {\n                        var ii = model.rows[i];\n                        config.series[0].data.push({\n                            name: ii.join(\" \"),\n                            id: \"id_\" + i/*,value:jStat(model.data[i]).sum()*/\n                        })\n\n                        for (var j in model.cols2label) {\n                            var jj = model.cols2label[j];\n                            if (model.data[i][j] && model.data[i][j] >= 0)\n                                config.series[0].data.push({\n                                    name: jj.join(\" \"),\n                                    id: \"id_\" + i + \"_\" + j,\n                                    parent: \"id_\" + i,\n                                    value: model.data[i][j]\n                                })\n                        }\n\n\n                    }\n                }\n                //console.log(config.series);\n\n                break;\n\n            case \"treemap\":\n                //console.log(\"Model\",model);\n\n                var model2 = {rows: this.pivotator.toTree(model.rows, 1), cols: this.pivotator.toTree(model.cols2, 1)};\n                //console.log(\"mod2\",model2)\n                config = {\n                    series: [{\n                        type: 'treemap',\n                        layoutAlgorithm: 'squarified',\n                        allowDrillToNode: true,\n                        animationLimit: 1000, turboThreshold: 0,\n                        dataLabels: {enabled: false},\n                        levelIsConstant: false,\n                        levels: [{level: 1, dataLabels: {enabled: true}, borderWidth: 3}],\n                        data: []\n                    }]\n                };\n\n                for (var j in model2.rows) {\n                    for (var i in model2.rows[j]) {\n                        //console.log(model2.rows[j][i])\n                        var ii = model2.rows[j][i];\n                        config.series[0].data.push({\n                            name: ii.id,\n                            id: ii.id,\n                            parent: ii.id.split(\"_\").slice(0, ii.id.split(\"_\").length - 1).join(\"_\")/*,value:jStat(model.data[i]).sum()*/\n                        })\n                    }\n                }\n\n\n                for (var i in model.rows) {\n                    //if(i<10 )\n                    {\n                        var ii = model.rows[i];\n                        //config.series[0].data.push({name:ii.join(\" \"),id:\"id_\"+i/*,value:jStat(model.data[i]).sum()*/})\n\n                        for (var j in model.cols2label) {\n                            var jj = model.cols2label[j];\n                            if (model.data[i][j] && model.data[i][j] >= 0)\n                                config.series[0].data.push({\n                                    name: jj.join(\" \"),\n                                    id: \"id_\" + i + \"_\" + j,\n                                    parent: ii.join(\"_\"),\n                                    value: model.data[i][j]\n                                })\n                        }\n\n\n                    }\n                }\n                //console.log(config.series);\n\n                break;\n\n            case \"bubble\":\n\n                for (var i in model.rows) {\n                    if (model.data[i][0] && model.data[i][1] && model.data[i][2])\n                        config.series[0].data.push(\n                            {\n                                x: model.data[i][0],\n                                y: model.data[i][1],\n                                z: model.data[i][2],\n                                name: model.rows[i].join(\" \"),\n                                country: ''\n                            }\n                        )\n                }\n\n                config.tooltip = {\n                    useHTML: true,\n                    headerFormat: '<table>',\n                    pointFormat: '<tr><th colspan=\"2\"><h3>{point.name}</h3></th></tr>' +\n                    '<tr><th>' + model.cols2[0] + ':</th><td>{point.x}</td></tr>' +\n                    '<tr><th>' + model.cols2[1] + ':</th><td>{point.y}</td></tr>' +\n                    '<tr><th>' + model.cols2[2] + ':</th><td>{point.z}</td></tr>',\n                    footerFormat: '</table>',\n                    followPointer: true\n                };\n                //console.log(\"config\",config)\n                /*\n                 config.series=[{\n                 data: [\n                 { x: 95, y: 95, z: 13.8, name: 'BE', country: 'Belgium' },\n                 { x: 86.5, y: 102.9, z: 14.7, name: 'DE', country: 'Germany' },\n                 { x: 80.8, y: 91.5, z: 15.8, name: 'FI', country: 'Finland' },\n                 { x: 80.4, y: 102.5, z: 12, name: 'NL', country: 'Netherlands' },\n                 { x: 80.3, y: 86.1, z: 11.8, name: 'SE', country: 'Sweden' },\n                 { x: 78.4, y: 70.1, z: 16.6, name: 'ES', country: 'Spain' },\n                 { x: 74.2, y: 68.5, z: 14.5, name: 'FR', country: 'France' },\n                 { x: 73.5, y: 83.1, z: 10, name: 'NO', country: 'Norway' },\n                 { x: 71, y: 93.2, z: 24.7, name: 'UK', country: 'United Kingdom' },\n                 { x: 69.2, y: 57.6, z: 10.4, name: 'IT', country: 'Italy' },\n                 { x: 68.6, y: 20, z: 16, name: 'RU', country: 'Russia' },\n                 { x: 65.5, y: 126.4, z: 35.3, name: 'US', country: 'United States' },\n                 { x: 65.4, y: 50.8, z: 28.5, name: 'HU', country: 'Hungary' },\n                 { x: 63.4, y: 51.8, z: 15.4, name: 'PT', country: 'Portugal' },\n                 { x: 64, y: 82.9, z: 31.3, name: 'NZ', country: 'New Zealand' }\n                 ]\n                 }]*/\n                break;\n\n            case \"bubblecircle\":\n\n\n                var obj = {};\n                var countRow=0;\n                \n                var orderRow=[];\n                for(var i in model.data) {\n                    orderRow.push( (model.data[i][0]?model.data[i][0].toFixed(10):-1) +\"_\"+i);\n                }\n\n                console.log(\"orderRow\",orderRow);\n\n                orderRow.sort(function(a,b) {\n                    return a.split('_')[0] - b.split('_')[0];\n                });\n//console.log(\"orderRow\",orderRow)\n\n                for(var i in orderRow)\n                {\n                    var v=orderRow[i].split(\"_\");\n\n                    if(parseFloat(v[0])!==null && parseFloat(v[0])>=0)\n                        countRow++;\n                }\n\n                var incrementalAngle = 2*Math.PI/countRow;\n\n                var currentAngle=0;\n                for (var i in orderRow)\n                {\n                    var v=orderRow[i].split(\"_\");\n                    var Z = parseFloat(v[0]);\n                    var I=parseInt(v[1]);\n                    if(Z!==null && Z>=0) {\n\n                        var X=Math.cos(currentAngle);\n                        var Y=Math.sin(currentAngle);\n                        obj = {\n                            x: X,\n                            y: Y,\n                            z: Z,                            \n                            name: model.rows[I].join(\" \" ),\n                            country: model.rows[I].join(\" \" )\n                        };\n\n                        currentAngle+=incrementalAngle;\n                        \n                        config.series[0].data.push(obj);\n                    }\n                }\n                //console.log('model row: ', obj);\n\n                config.tooltip = {\n                    useHTML: true,\n                    headerFormat: '<table>',\n                    pointFormat: '<tr><th colspan=\"2\">{point.country}</th></tr>' +\n                    '<tr><th>' + model.cols2[0] + ':</th><td>{point.z}</td></tr>',\n                    footerFormat: '</table>',\n                    followPointer: true\n                };\n\n            break;\n        default:\n\n            for (var ii in model.cols) {\n\n                if (model.cols.hasOwnProperty(ii)) {\n                    i = model.cols[ii];\n                    config.xAxis.categories.push(i.title[this.lang]);\n                }\n            }\n\n            for (var i in model.rows) {\n\n                //\t console.log(\"1 \",config.series)\n                config.series.push({name: model.rows[i].join(\" \"), data: model.data[i]});\n                //\t console.log(\"2 \",config.series)\n\n            }\n    }\n    //\tconsole.log(\"config\",config)\n    return config;\n};\n\n\n    HC.prototype._trigger = function (channel) {\n\n        if (!this.channels[channel]) {\n            return false;\n        }\n        var args = Array.prototype.slice.call(arguments, 1);\n        for (var i = 0, l = this.channels[channel].length; i < l; i++) {\n            var subscription = this.channels[channel][i];\n            subscription.callback.apply(subscription.context, args);\n        }\n\n        return this;\n    };\n\n    // end API\n\n    HC.prototype._validateInput = function () {\n\n        var valid = true,\n            errors = [];\n\n        return errors.length > 0 ? errors : valid;\n\n    };\n\n    HC.prototype._initVariables = function () {\n\n        //pub/sub\n        this.channels = {};\n\n        this.pivotator = new Pivotator();\n\n    };\n\n    HC.prototype._bindEventListeners = function () {\n\n        //amplify.subscribe(this._getEventName(EVT.SELECTOR_READY), this, this._onSelectorReady);\n\n    };\n\n    HC.prototype._getEventName = function (evt) {\n\n        return this.id.concat(evt);\n    };\n\n    //disposition\n    HC.prototype._unbindEventListeners = function () {\n\n        //amplify.unsubscribe(this._getEventName(EVT.SELECTOR_READY), this._onSelectorReady);\n\n    };\n\n    HC.prototype.dispose = function () {\n\n        //this.chart.dispose(); change in highchart destroy\n\n        //unbind event listeners\n        this._unbindEventListeners();\n\n    };\n\n    // utils\n\n    return HC;\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/js/renderers/highcharts.js\n ** module id = 11\n ** module chunks = 0\n **/","if (typeof define !== 'function') {\n    var define = require('amdefine')(module);\n}\n\n\ndefine(function () {\n\n    'use strict';\n\n    return {\n\n        //Line chart\n        chart: {\n            events: {},\n\n            type: 'line', //Tipo di grafico:  area, areaspline, boxplot, bubble, column, line, pie, scatter, spline\n\n            alignTicks: false,\n            backgroundColor: '#FFFFFF', //Colore di background\n            //borderColor: '#3fa8da', //Colore bordo intorno\n            //borderWidth: 1, //Spessore bordo intorno\n            //borderRadius: 0, //Smusso bordo intorno\n            //margin: [5,5,5,5], //Margine intorno (vince sullo spacing)\n            spacing: [20, 1, 1, 1],//Spacing intorno (molto simile al margin - Di default il bottom è 15, qui l'ho messo a 10 per essere uguale agli altri)\n            //plotBackgroundColor: 'red', //Colore di background solo area chart\n            plotBorderColor: '#ffffff', //Colore bordo intorno solo area chart\n            plotBorderWidth: 0, //Spessore bordo intorno solo area chart\n            //showAxes: false, //Mostra gli assi quando le serie sono aggiunte dinamicamente\n            style: {\n                fontFamily: 'Roboto', // Font di tutto\n                fontSize: '12px', // La dimensione qui vale solo per i titoli\n                fontWeight: 300 // Con Roboto è molto bello giocare con i pesi\n            },\n            zoomType: 'xy', //Attiva lo zoom e stabilisce in quale dimensione\n            //selectionMarkerFill: 'rgba(0,0,0,0.25)',//Colore di fonfo della selezione per lo zoom (trasparente per far vedere sotto)\n\n\n            resetZoomButton: {\n                position: {\n                    align: 'right', //Allineamento zoom orizzontale\n                    //verticalAlign:'middle' //Allineamento zoom verticale\n                    x: -10 //Posizione del pulsante rispetto all'allineamento (valori positivi > destra) e al PLOT\n\n                },\n                theme: {\n                    fill: '#FFFFFF', //Colore di background pulsante reset zoom\n                    stroke: '#666666', //Colore di stroke pulsante reset zoom\n                    width: 60, //Larghezza del pulsante reset\n                    //r:0, //Smusso pulsante reset zoom\n                    style: {\n                        textAlign: 'center', //CSS style aggiunto da me per centrare il testo\n                        fontSize: 10\n                    },\n                    states: {\n                        hover: {\n                            fill: '#e6e6e6', //Colore di background hover pulsante reset zoom\n                            stroke: '#666666', //Colore di stroke hover pulsante reset zoom\n                            style: {\n                                //color: 'white' //Colore testo hover pulsante reset zoom\n                            }\n                        }\n                    }\n                }\n\n            }\n        },\n        colors: [ //Colori delle charts\n            '#56adc3',\n            '#5691c3',\n            '#5663c3',\n            '#d2ccbf',\n            '#DF3328',\n            '#F1E300',\n            '#F7AE3C',\n            '#DF3328',\n            '#2e8bcc',\n            '#339933',\n            '#e51400',\n            '#ffc40d',\n            '#f39c12',\n            '#e671b8',\n            '#7b4f9d',\n            '#8cbf26',\n            '#ff0097',\n            '#00aba9',\n            '#1abc9c',\n            '#16a085',\n            '#2ecc71',\n            '#27ae60',\n            '#3498db',\n            '#2980b9',\n            '#9b59b6',\n            '#8e44ad',\n            '#34495e',\n            '#2c3e50',\n            '#f1c40f',\n            '#e67e22',\n            '#d35400',\n            '#e74c3c',\n            '#c0392b'\n        ],\n        credits: {\n            enabled: false //Attiva o disattiva il link di HighCharts dalla chart\n        },\n        exporting: {\n            enabled: true\n        },\n        navigation: { //Modifica lo stile dei bottoni e spesso del solo bottone dell'esportazione (lo sfondo)\n            buttonOptions: {\n                theme: {\n                    'stroke-width': 1, // Peso stroke del bottone\n                    stroke: '#666666', // Colore stroke del bottone\n                    r: 0, // Smusso stroke del bottone,\n                    states: {\n                        hover: {\n                            stroke: '#666666', // Press stroke del bottone\n                            fill: '#e6e6e6' // Rollover del bottone\n                        },\n                        select: {\n                            stroke: '#666666', // Press stroke del bottone\n                            fill: '#e6e6e6' // Press Fill del bottone\n                        }\n                    }\n                }\n            }\n        },\n        legend: { //Modifica style della legenda\n            enabled: true, //Attiva la legenda\n            floating: false, // IMPORTANTE - Permette alla plot area di stare sotto alla legenda - si guadagna molto spazio\n\n            //margin: 100, //Margine dell'intero blocco legenda dall'area di PLOT (Solo quando non è floating)\n            padding: 50, //Padding del box legenda (Ingrandisce il box)\n            backgroundColor: '#FFFFFF', //Colore di sfondo della legenda\n            //layout: 'horizontal', //Tipologia di legenda\n            align: 'left', //Allineamento orizzontale del box della legenda (left, center, right)\n            verticalAlign: 'bottom', //allineamento verticale della legenda (top, middle, bottom)\n            //width: 200, //Larghezza della legenda (Aggiunge Margini e padding)\n            x: 15,//Offset della posizione della legenda rispetto all'allineamento (valori positivi > destra)\n            //y: -8,//Offset della posizione della legenda rispetto all'allineamento (valori positivi > verso il basso)\n            //maxHeight: 90, //IMPORTANTE - Indica l'altezza massima della legenda, se superata, mostra la paginazione (vedi sotto)\n            //borderColor: '#666666', //Colore del bordo della legenda\n            borderWidth: 0, //Spessore bordo della legenda\n            //borderRadius: 3, //Smusso della legenda\n            //itemDistance: 10, //Distanza X degli elementi quando la legenda è in verticale\n            //symbolWidth: 20, //Larghezza del simbolo rettangolo quando la legenda ne ha uno (accanto al nome - default 16)\n            //symbolHeight: 20, //Altezza del simbolo rettangolo quando la legenda ne ha uno (accanto al nome - default 12)\n            //symbolRadius: 3, //Smusso del simbolo rettangolo quando la legenda ne ha uno (default 2)\n            symbolPadding: 10, //Distanza tra simbolo e legenda (default 5)\n            //itemMarginBottom: 5, //Margine inferiore di ogni elemento della legenda\n            //itemMarginTop: 5, //Margine superiore di ogni elemento della legenda\n            //lineHeight: 20, //Altezza di ogni elemento della legenda (il valore di default è 16)\n            itemStyle: {\n                cursor: 'pointer',\n                color: '#666666',\n                fontSize: '14px',\n                fontWeight: 300,\n            },\n            itemHiddenStyle: { //Colore dell'elemento legenda quando è disattivato\n                color: '#eeeeee'\n            },\n            itemHoverStyle: { //Colore dell'elemento legenda in rollover\n                color: '#3ca7da'\n            },\n            navigation: { //Paginazione Legenda - stilizzazione\n                activeColor: '#3ca7da', //Colore freccia attiva legenda\n                inactiveColor: '#666666', //Colore freccia disattiva legenda\n                arrowSize: 8, //Dimensioni freccia\n                animation: true, //Attiva/Disattiva animazione\n                style: { //Stile CSS applicato solo alla navigazione della legenda\n                    color: '#666666',\n                    fontSize: '10px'\n                }\n            }\n        },\n        /*        plotOptions: {\n         series: {\n         allowPointSelect: true, //Permette di selezionare i punti della chart\n         //pointPlacement: \"on\", Per partire dall'origine\n         animation: { // Configura l'animazione di entrata\n         duration: 1000,\n         easing: 'swing'\n         },\n         connectNulls: true,\n         cropThreshold: 3,\n         lineWidth: 1, // IMPORTANTE - Cambia lo spessore delle linee della chart\n         states: {\n         hover: {\n         lineWidth: 1\n         }\n         },\n         fillColor: {\n         },\n         marker: {\n         enabled: false, //Attiva o disattiva i marker\n         //symbol: 'url(http://www.mentaltoy.com/resources/logoChart.png)', //Questo paramentro carica un simbolo personalizzato. Si può anche avere una chart con marker diverse sulle linee\n         symbol: 'circle', // Tipologia di marker\n         radius: 4,\n         lineWidth: 1,\n         states: {\n         hover: {\n         enabled: true, // Attiva o disattiva il marker quando si passa sopra la chart\n         symbol: 'circle',\n         radius: 5,\n         lineWidth: 2\n         }\n         }\n         }\n         }\n         },*/\n        title: {\n            //enabled: false,\n            text: '',\n            x: -20 //center\n        },\n        subtitle: {\n            text: null,\n            x: -20\n        },\n        xAxis: {\n            gridLineWidth: 1, // IMPORTANTE - Attiva le linee verticali\n            lineColor: '#e0e0e0',\n            tickColor: '#e0e0e0',\n            gridLineColor: '#eeeeee',\n            tickLength: 7,\n            //tickmarkPlacement: 'on', Per partire dall'origine\n            labels: {\n                y: 25,\n                style: {\n                    color: '#666666',\n                    fontWeight: '300',\n                    fontSize: 12\n                }\n            },\n            //type: 'datetime',\n            /*            dateTimeLabelFormats: { // don't display the dummy year\n             //month: '%e. %b',\n             year: '%Y'\n             },*/\n            categories: [],\n            title: {\n                enabled: false,\n                text: 'null'\n            }\n        },\n        yAxis: {\n            gridLineWidth: 1, // IMPORTANTE - Attiva le linee verticali\n            lineWidth: 1,\n            //tickWidth: 1,\n            lineColor: '#e0e0e0',\n            gridLineColor: '#eeeeee',\n            labels: {\n                style: {\n                    color: '#666666',\n                    fontWeight: '300',\n                    fontSize: 12\n                }\n            },\n            title: {\n                enabled: false,\n                text: 'null'\n            },\n            plotLines: [\n                {\n                    value: 0,\n                    width: 1\n                }\n            ]\n        },\n        tooltip: {\n            //valueSuffix: '',\n            // backgroundColor: 'rgba(255, 255, 255, 0.95)',\n            borderWidth: 1,\n            shadow: true,\n            crosshairs: \"mixed\",\n            shared: false\n        },\n        series: [],\n        noData: {\n            style: {\n                fontWeight: 'bold',\n                fontSize: '15px',\n                color: '#303030'\n            }\n        }\n    }\n\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/config/renderers/highcharts_shared.js\n ** module id = 12\n ** module chunks = 0\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_13__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"highcharts\"\n ** module id = 13\n ** module chunks = 0\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_14__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"highcharts-more\"\n ** module id = 14\n ** module chunks = 0\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_15__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"highcharts-treemap\"\n ** module id = 15\n ** module chunks = 0\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_16__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"highcharts-no-data-to-display\"\n ** module id = 16\n ** module chunks = 0\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_17__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"highcharts-exporting\"\n ** module id = 17\n ** module chunks = 0\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_18__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"amplify-pubsub\"\n ** module id = 18\n ** module chunks = 0\n **/","if (typeof define !== 'function') {\n    var define = require('amdefine')(module);\n}\n\ndefine(function () {\n\n    'use strict';\n\n    return {\n\n        line: {\n            chart: {type: 'line'},\n            title: {text: ''},\n            subtitle: {text: ''},\n            xAxis: {crosshair: true},\n            //yAxis: {min: 0, title: {text: ''}},\n            tooltip: {\n                headerFormat: '<span style=\"font-size:10px\">{point.key}</span><table>',\n                pointFormat: '<tr><td style=\"color:{series.color};padding:0\">{series.name}: </td>' +\n                '<td style=\"padding:0\"><b>{point.y:.1f} </b></td></tr>',\n                footerFormat: '</table>',\n                useHTML: true\n            },\n            plotOptions: {column: {pointPadding: 0.2, borderWidth: 0}},\n            series: []\n        },\n        column: {\n            chart: {type: 'column'},\n            title: {text: ''},\n            subtitle: {text: ''},\n            xAxis: {categories: [], crosshair: true},\n           // yAxis: {min: 0, title: {text: ''}},\n            tooltip: {\n                headerFormat: '<span style=\"font-size:10px\">{point.key}</span><table>',\n                pointFormat: '<tr><td style=\"color:{series.color};padding:0\">{series.name}: </td>' +\n                '<td style=\"padding:0\"><b>{point.y:.1f} </b></td></tr>',\n                footerFormat: '</table>',\n                useHTML: true\n            },\n            plotOptions: {column: {pointPadding: 0.2, borderWidth: 0}},\n            series: []\n        },\n        column_stacked: {\n            chart: {type: 'column'},\n            title: {text: ''},\n            subtitle: {text: ''},\n            xAxis: {categories: [], crosshair: true},\n           // yAxis: {min: 0, title: {text: ''}},\n            tooltip: {\n                headerFormat: '<span style=\"font-size:10px\">{point.key}</span><table>',\n                pointFormat: '<tr><td style=\"color:{series.color};padding:0\">{series.name}: </td>' +\n                '<td style=\"padding:0\"><b>{point.y:.1f} </b></td></tr>',\n                footerFormat: '</table>',\n                useHTML: true\n            },\n            plotOptions: {column: {stacking: 'normal',pointPadding: 0.2, borderWidth: 0}},\n            series: []\n        },\n\n        area: {\n            chart: {type: 'area'},\n            title: {text: ''},\n            subtitle: {text: ''},\n            xAxis: {categories: [], crosshair: true},\n          //  yAxis: {min: 0, title: {text: ''}},\n            tooltip: {\n                headerFormat: '<span style=\"font-size:10px\">{point.key}</span><table>',\n                pointFormat: '<tr><td style=\"color:{series.color};padding:0\">{series.name}: </td>' +\n                '<td style=\"padding:0\"><b>{point.y:.1f} </b></td></tr>',\n                footerFormat: '</table>',\n                useHTML: true\n            },\n            plotOptions: {column: {pointPadding: 0.2, borderWidth: 0}},\n            series: []\n        },\n\t\tpyramid: \n      {\n            chart: {\n                type: 'bar'\n            },\n            title: {\n                text: ''\n            },\n            subtitle: {\n                text: ''\n            },\n            xAxis: [{\n               categories:[],\n                reversed: false,\n                labels: {\n                    step: 1\n                }\n            }, { // mirror axis on right side\n\n               categories:[],              \n\t\t\t  opposite: true,\n                reversed: false,\n              \n                linkedTo: 0,\n                labels: {\n                    step: 1\n                }\n            }],\n            yAxis: {\n                title: {\n                    text: null\n                },\n                labels: {\n                    formatter: function () {\n                        return Math.abs(this.value) ;\n                    }\n                }\n            },\n\n            plotOptions: {\n                series: {\n                    stacking: 'normal'\n                }\n            },\n\n            tooltip: {\n                formatter: function () {\n                    return '<b>' + this.series.name + ', age ' + this.point.category + '</b><br/>' +\n                        'Population: ' + Highcharts.numberFormat(Math.abs(this.point.y), 0);\n                }\n            },\n\n         \t\"series\":[],\n        \n        },\n        area_stacked: {\n            chart: {type: 'area'},\n            title: {text: ''},\n            subtitle: {text: ''},\n            xAxis: {categories: [], crosshair: true},\n            //yAxis: {min: 0, title: {text: ''}},\n            tooltip: {\n                headerFormat: '<span style=\"font-size:10px\">{point.key}</span><table>',\n                pointFormat: '<tr><td style=\"color:{series.color};padding:0\">{series.name}: </td>' +\n                '<td style=\"padding:0\"><b>{point.y:.1f} </b></td></tr>',\n                footerFormat: '</table>',\n                useHTML: true\n            },\n            plotOptions: {area: {stacking: 'normal'}},\n            series: []\n        },\n        pie: {\n            chart: {type: 'pie'},\n            title: {text: ''},\n            subtitle: {text: ''},\n            xAxis: {categories: [], crosshair: true},   plotOptions: {\n            series: {\n                dataLabels: {\n                    enabled: true,\n                    format: '{point.name}: {point.y:.1f}'\n                }\n            }\n        },\n           //yAxis: {min: 0, title: {text: ''}},\n            tooltip: {\n                headerFormat: '<span style=\"font-size:10px\">{point.key}</span><table>',\n                pointFormat: '<tr><td style=\"color:{series.color};padding:0\">{series.name}: </td>' +\n                '<td style=\"padding:0\"><b>{point.y:.1f} </b></td></tr>',\n                footerFormat: '</table>',\n                useHTML: true\n            },\n           // plotOptions: {area: {stacking: 'normal'}},\n            series: [{data:[]\t}]\n\t\t\t,drilldown:{series:[]}\n        }, \n\t\tdonut: {\n            chart: {type: 'pie'},\n            title: {text: ''},\n            subtitle: {text: ''},\n            xAxis: {categories: [], crosshair: true}, plotOptions: {\n                pie: {\n                    allowPointSelect: true,\n                    cursor: 'pointer',\n                    dataLabels: {\n                        enabled: false\n                    },\n                    showInLegend: true\n                }\n            },\n           //yAxis: {min: 0, title: {text: ''}},\n            tooltip: {\n                headerFormat: '<span style=\"font-size:10px\">{point.key}</span><table>',\n                pointFormat: '<tr><td style=\"color:{series.color};padding:0\">{series.name}: </td>' +\n                '<td style=\"padding:0\"><b>{point.y:.1f} </b></td></tr>',\n                footerFormat: '</table>',\n                useHTML: true\n            },\n           // plotOptions: {area: {stacking: 'normal'}},\n            series: []\n        },\n        scatter: {\n        chart: {\n            type: 'scatter',\n            zoomType: 'xy'\n        },\n       /* title: {\n            text: 'Height Versus Weight of 507 Individuals by Gender'\n        },\n        subtitle: {\n            text: 'Source: Heinz  2003'\n        },\n        xAxis: {\n            title: {\n                enabled: true,\n                text: 'Height (cm)'\n            },\n            startOnTick: true,\n            endOnTick: true,\n            showLastLabel: true\n        },\n        yAxis: {\n            title: {\n                text: 'Weight (kg)'\n            }\n        },\n        legend: {\n            layout: 'vertical',\n            align: 'left',\n            verticalAlign: 'top',\n            x: 100,\n            y: 70,\n            floating: true,\n            backgroundColor:  '#FFFFFF',\n            borderWidth: 1\n        },\n        plotOptions: {\n            scatter: {\n                marker: {\n                    radius: 5,\n                    states: {\n                        hover: {\n                            enabled: true,\n                            lineColor: 'rgb(100,100,100)'\n                        }\n                    }\n                },\n                states: {\n                    hover: {\n                        marker: {\n                            enabled: false\n                        }\n                    }\n                },\n                tooltip: {\n                    headerFormat: '<b>{series.name}</b><br>',\n                    pointFormat: '{point.x} cm, {point.y} kg'\n                }\n            }\n        },*/\n        series: []\n    },\n       \n        heatmap: {\n\n            chart: {\n                type: 'heatmap',\n                marginTop: 40,\n                marginBottom: 80,\n                plotBorderWidth: 1\n            },\n\n\n            title: {\n                text: ''\n            },\n\n            xAxis: {\n                categories: [/*'Alexander', 'Marie', 'Maximilian', 'Sophia', 'Lukas', 'Maria', 'Leon', 'Anna', 'Tim', 'Laura'*/]\n            },\n\n            yAxis: {\n                categories: [/*'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday'*/],\n                title: null\n            },\n\n            colorAxis: {\n                min: 0,\n                minColor: '#FFFFFF',\n              //  maxColor: Highcharts.getOptions().colors[0]\n            },\n\n            legend: {\n                align: 'right',\n                layout: 'vertical',\n                margin: 0,\n                verticalAlign: 'top',\n                y: 25,\n                symbolHeight: 280\n            },\n\n            tooltip: {\n                formatter: function () {\n                    return '<b>' + this.series.xAxis.categories[this.point.x] + '</b>  <br><b>' + this.series.yAxis.categories[this.point.y] + '</b><br> Value : <b>' +this.point.value + '</b>';\n                }\n            },\n\n            series: [{\n                name: '',\n                borderWidth: 1,\n                data: [/*[0, 0, 10], [0, 1, 19], [0, 2, 8], [0, 3, 24], [0, 4, 67], [1, 0, 92], [1, 1, 58], [1, 2, 78], [1, 3, 117], [1, 4, 48], [2, 0, 35], [2, 1, 15], [2, 2, 123], [2, 3, 64], [2, 4, 52], [3, 0, 72], [3, 1, 132], [3, 2, 114], [3, 3, 19], [3, 4, 16], [4, 0, 38], [4, 1, 5], [4, 2, 8], [4, 3, 117], [4, 4, 115], [5, 0, 88], [5, 1, 32], [5, 2, 12], [5, 3, 6], [5, 4, 120], [6, 0, 13], [6, 1, 44], [6, 2, 88], [6, 3, 98], [6, 4, 96], [7, 0, 31], [7, 1, 1], [7, 2, 82], [7, 3, 32], [7, 4, 30], [8, 0, 85], [8, 1, 97], [8, 2, 123], [8, 3, 64], [8, 4, 84], [9, 0, 47], [9, 1, 114], [9, 2, 31], [9, 3, 48], [9, 4, 91]*/],\n                dataLabels: {\n                    enabled: true,\n                    color: '#000000'\n                }\n            }]\n\n        },\n        treemap: {\n       \n          series: []\n    },\n        boxplot: {\n\n        chart: {\n            type: 'boxplot'\n        },\n\n        title: {\n            text: ''\n        },\n\n        legend: {\n            enabled: false\n        },\n\n        xAxis: {\n            categories: [/*'1', '2', '3', '4', '5'*/],\n            title: {\n                text: ''\n            }\n        },\n\n        yAxis: {\n            title: {\n                text: ''\n            }\n        },\n\n        series: []\n\n    },\nbubble:{\n\n        chart: {\n            type: 'bubble',\n            plotBorderWidth: 1,\n            zoomType: 'xy'\n        },\n\n        legend: {\n            enabled: false\n        },\n\n        title: {\n            text: 'Sugar and fat intake per country'\n        },\n\n        subtitle: {\n            text: 'Source: <a href=\"http://www.euromonitor.com/\">Euromonitor</a> and <a href=\"https://data.oecd.org/\">OECD</a>'\n        },\n\n        xAxis: {\n            gridLineWidth: 1,\n            title: {\n                text: ''\n            },\n            labels: {\n                format: '{value} '\n            },\n            plotLines: [{\n                color: 'black',\n                dashStyle: 'dot',\n                width: 2,\n                value: 65,\n                label: {\n                    rotation: 0,\n                    y: 15,\n                    style: {\n                        fontStyle: 'italic'\n                    },\n                    text: ''\n                },\n                zIndex: 3\n            }]\n        },\n\n        yAxis: {\n            startOnTick: false,\n            endOnTick: false,\n            title: {\n                text: ''\n            },\n            labels: {\n                format: '{value}'\n            },\n            maxPadding: 0.2,\n            plotLines: [{\n                color: 'black',\n                dashStyle: 'dot',\n                width: 2,\n                value: 50,\n                label: {\n                    align: 'right',\n                    style: {fontStyle: 'italic'},\n                    text: '',\n                    x: -10\n                },\n                zIndex: 3\n            }]\n        },\n\n      \n\n        plotOptions: {\n            series: {\n                dataLabels: {\n                    enabled: true,\n                    format: '{point.name}'\n                }\n            }\n        },\n\n        series: [{data:[]}]\n\n    },\nbubblecircle:{\n\n        chart: {\n            type: 'bubble',\n            plotBorderWidth: 1,\n            zoomType: 'xy'\n        },\n\n        legend: {\n            enabled: false\n        },\n\n        title: {\n            text: ''\n        },\n\n        subtitle: {\n            text: ''\n        },\n\n        xAxis: {\n            gridLineWidth: 1,\n            title: {\n                text: ''\n            },\n            labels: {\n                format: '{value} '\n            },\n            plotLines: [{\n                color: 'black',\n                dashStyle: 'dot',\n                width: 2,\n                value: 65,\n                label: {\n                    rotation: 0,\n                    y: 15,\n                    style: {\n                        fontStyle: 'italic'\n                    },\n                    text: ''\n                },\n                zIndex: 3\n            }]\n        },\n\n        yAxis: {\n            startOnTick: false,\n            endOnTick: false,\n            title: {\n                text: ''\n            },\n            labels: {\n                format: '{value}'\n            },\n            maxPadding: 0.2,\n            plotLines: [{\n                color: 'black',\n                dashStyle: 'dot',\n                width: 2,\n                value: 50,\n                label: {\n                    align: 'right',\n                    style: {fontStyle: 'italic'},\n                    text: '',\n                    x: -10\n                },\n                zIndex: 3\n            }]\n        },\n\n      \n\n        plotOptions: {\n            series: {\n                dataLabels: {\n                    enabled: false,\n                    format: '{point.name}'\n                }\n            }\n        },\n\n        series: [{data:[]}]\n\n    }\n    };\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/config/renderers/highcharts.js\n ** module id = 19\n ** module chunks = 0\n **/","if (typeof define !== 'function') {\n    var define = require('amdefine')(module);\n}\n\ndefine([\n    'jquery',\n    'underscore',\n    'loglevel',\n    '../../config/errors',\n    '../../config/events',\n    '../../config/config',\n    'fenix-ui-pivotator',\n    '../../config/renderers/jvenn',\n    'jvenn',\n    'amplify-pubsub'\n], function ($, _, log, ERR, EVT, C, Pivotator, templates) {\n\n    'use strict';\n\n    function JVenn(o) {\n        log.info(\"FENIX JVenn\");\n        log.info(o);\n\n        $.extend(true, this, C, o);\n\n        var valid = this._validateInput();\n\n        if (valid === true) {\n\n            this._initVariables();\n\n            this._bindEventListeners();\n\n            this._renderJVenn(this.pivotatorConfig);\n\n            return this;\n\n        } else {\n            log.error(\"Impossible to create JVenn\");\n            log.error(valid)\n        }\n    }\n\n    // API\n\n    /**\n     * pub/sub\n     * @return {Object} component instance\n     */\n    JVenn.prototype.on = function (channel, fn, context) {\n        var _context = context || this;\n        if (!this.channels[channel]) {\n            this.channels[channel] = [];\n        }\n        this.channels[channel].push({context: _context, callback: fn});\n        return this;\n    };\n\n    /**\n     * Force redrawing\n     * @return {Object} filter instance\n     */\n    JVenn.prototype.redraw = function () {\n\n        if (this.chart.length > 0){\n           // this.chart.highcharts().reflow();\n        } else {\n            log.warn(\"Abort redraw\");\n        }\n\n    };\n\n    JVenn.prototype.update = function (config) {\n\n        //TODO add validation\n        this.type = config.type ? config.type : this.type;\n        this._renderJVenn(config);\n\n    };\n\n    JVenn.prototype._renderJVenn = function (config) {\n        var model = this.model;\n\n        if (!config) {\n            alert(\"Impossible to find chart configuration: \" + this.type);\n        }\n\n        var config = $.extend(true, this._populateData(model, templates), config);\n        this.chart = this.el.jvenn(config);\n\n        this._trigger(\"ready\");\n\n    };\n\n    JVenn.prototype._populateData = function (model, config) {\n\n        for (var ii in model.cols) {\n            if (model.cols.hasOwnProperty(ii)) {\n                var i = model.cols[ii];\n\n\n               // console.log(i.title[this.lang]);\n                config.xAxis.categories.push(i.title[this.lang]);\n\n            }\n        }\n\n        var dataArray = [];\n\n        for (var k in model.rows) {\n                var data = model.data[k];\n\n                var processedArry = [];\n                for(var x in data){\n                     if(data[x] != null) {\n                         processedArry.push(data[x]);\n                     }\n                 }\n\n            config.series.push({\n                name: model.rows[k].join(\" \"),\n                data: processedArry\n            });\n        }\n\n        return config;\n    };\n\n\n    JVenn.prototype._trigger = function (channel) {\n\n        if (!this.channels[channel]) {\n            return false;\n        }\n        var args = Array.prototype.slice.call(arguments, 1);\n        for (var i = 0, l = this.channels[channel].length; i < l; i++) {\n            var subscription = this.channels[channel][i];\n            subscription.callback.apply(subscription.context, args);\n        }\n\n        return this;\n    };\n\n    // end API\n\n    JVenn.prototype._validateInput = function () {\n\n        var valid = true,\n            errors = [];\n\n        return errors.length > 0 ? errors : valid;\n\n    };\n\n    JVenn.prototype._initVariables = function () {\n\n        //pub/sub\n        this.channels = {};\n\n        this.pivotator = new Pivotator();\n\n    };\n\n    JVenn.prototype._bindEventListeners = function () {\n\n        //amplify.subscribe(this._getEventName(EVT.SELECTOR_READY), this, this._onSelectorReady);\n\n    };\n\n    JVenn.prototype._getEventName = function (evt) {\n\n        return this.id.concat(evt);\n    };\n\n    //disposition\n    JVenn.prototype._unbindEventListeners = function () {\n\n        //amplify.unsubscribe(this._getEventName(EVT.SELECTOR_READY), this._onSelectorReady);\n\n    };\n\n    JVenn.prototype.dispose = function () {\n\n        //this.chart.dispose(); change in highchart destroy\n\n        //unbind event listeners\n        this._unbindEventListeners();\n\n    };\n\n    // utils\n\n    return JVenn;\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/js/renderers/jvenn.js\n ** module id = 20\n ** module chunks = 0\n **/","if (typeof define !== 'function') {\n    var define = require('amdefine')(module);\n}\n\ndefine(function () {\n\n    'use strict';\n\n    return {\n       displayMode: 'classic',  //default = 'classic' or 'edwards'\n       displayStat: 'true', // default = true\n       xAxis: {\n           categories: []\n       },\n       series: [],\n       exporting: true\n    };\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/config/renderers/jvenn.js\n ** module id = 21\n ** module chunks = 0\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_22__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"jvenn\"\n ** module id = 22\n ** module chunks = 0\n **/"],"sourceRoot":""}